<application guid="MT103_TO_PACS008" version="1.0"><display name="MT103_To_PACS008" categories="ISO20022.MT_To_MX" /><Metadata productVersion="12" buildNo="12350" createdBy="admin" /><creation date="23-02-2021 06:30:32" lastModifiedDate="13-03-2023 15:47:40" authors="eStudio" schema-version="2.0" /><deployment label="Development" /><deleteDestinationAfterStop value="Fetch_From_FES" /><storeSourceContext value="false" /><durableRoute value="Fetch_From_FES" /><service-instances><inst name="MTtoXML"><service guid="MT2XML" version="4.0" /><short-description>Component to convert SWIFT MT messages to XML.</short-description><long-description>Component to convert SWIFT MT messages to XML using either standard schemas provided by SWIFT or generic XML.</long-description><config-file name="MTtoXML.xml" /><named-configurations><named-configuration name="SwiftMTSchemaDirectory" configurationType="resource" configurationID="MessageSchema Directory Configuration" /></named-configurations><deployment nodes="fes" /><execution><debug enabled="false" port="5000" suspend="false" /><launchOrder-Sequence sequence="-1" /><stopOrder-Sequence sequence="-1" /><launch type="2"><groupprocess id="&lt;None>" /></launch></execution><inputport-instances><inputport-instance name="IN_PORT"><description>Receives SWIFT MT messages.</description><selectors /><sbwmask /><jms><destination custom="true" name="MT103_To_PACS008" /><subscriber><transaction enabled="false" /><subscription durable="false" /></subscriber></jms><workflow type="0" datatype="2" enablecallout="false" /></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><description>Sends transformed XML messages.</description><schema root="{urn:swift:xsd:mtmsg.2020}FinMessage"><file>MTtoXML.OUT_PORT.xsd</file><schemarefs><schemaref uri="urn:swift:xsd:fin.103.2020"><file>MTtoXML.OUT_PORT.1.xsd</file></schemaref></schemarefs></schema><selectors /><sbwmask /><jms><destination /><publisher><messages persistent="true" /></publisher></jms><workflow type="0" datatype="2" enablecallout="false" /></outputport-instance><outputport-instance name="ON_EXCEPTION"><description>Used as an Exception Port</description><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><file>MTtoXML.ON_EXCEPTION.xsd</file></schema><selectors /><sbwmask /><jms><destination /><publisher><messages persistent="true" /></publisher></jms><workflow type="1" datatype="2" enablecallout="false" /></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">1000000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM/dd/yyyy HH:mm:ss</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="ERR_HANDLER" level="WARNING" uniqueNameRequired="true" /><logmodule name="OUT_HANDLER" level="INFO" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.mt2xml.MT2XMLService" level="WARNING" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.mt2xml.engine" level="WARNING" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.mt2xml.transport.jms" level="WARNING" uniqueNameRequired="true" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false"><value> -client -DLOG_TO_STREAM=true -Xrs -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m</value></runtime-argument><runtime-argument name="JAVA_HOME" mandatory="false" inmemory="false" /></runtime-arguments><servicerefs /></inst><inst name="SwiftTranslator"><service guid="Xslt" version="4.0" /><short-description>Transforms input XML based on Mappings defined and generates an output XML</short-description><long-description>Transforms input XML based on Mappings defined and generates an output XML</long-description><config-file name="SwiftTranslator.xml" /><resource-properties><resource-property name="XSL">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;xsl:stylesheet version="1.0" xmlns:xalan="http://xml.apache.org/xslt" xmlns:datetime="http://exslt.org/dates-and-times" xmlns:math="http://exslt.org/math" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:lxslt="http://xml.apache.org/xslt" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:java="http://xml.apache.org/xslt/java" xmlns:set="http://exslt.org/sets" exclude-result-prefixes="xalan java lxslt" xmlns:ns6="urn:iso:std:iso:20022:tech:xsd:head.001.001.02" xmlns:ns5="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:swift:xsd:mtmsg.2020" xmlns:ns4="urn:swift:xsd:envelope" xmlns:ns3="urn:swift:xsd:fin.103.2020" xmlns:ns2="urn:iso:std:iso:20022:tech:xsd:pacs.008.001.08" xmlns:MT2MX="http://xml.apache.org/xslt/java" xmlns:MTtoMX="http://xml.apache.org/xslt/java" xmlns:MTtoMXUtil="http://xml.apache.org/xslt/java" xmlns:MX2MT="http://xml.apache.org/xslt/java" xmlns:MXToMT="http://xml.apache.org/xslt/java" xmlns:MXtoMT="http://xml.apache.org/xslt/java" xmlns:New="http://xml.apache.org/xslt/java" xmlns:dateConversion="dateConversion" xmlns:myext="myext" xmlns:strings="strings" extension-element-prefixes="datetime set math MT2MX MTtoMX MTtoMXUtil MX2MT MXToMT MXtoMT New dateConversion myext strings">
  &lt;xsl:import href="GLOBAL_FUNCLET_PATH">&lt;/xsl:import>
  &lt;xsl:output method="xml" indent="yes" encoding="UTF-8" xalan:indent-amount="2" omit-xml-declaration="no">&lt;/xsl:output>
  &lt;xsl:variable name="document" select="/">&lt;/xsl:variable>
  &lt;xsl:variable name="document_IN_PORT" select="document('IN_PORT')">&lt;/xsl:variable>
  &lt;xsl:template match="/">
    &lt;ns4:Envelope>
      &lt;ns6:AppHdr>
        &lt;ns6:Fr>
          &lt;ns6:FIId>
            &lt;ns6:FinInstnId>
              &lt;ns6:BICFI>
                &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.generateTSender(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:LTIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:BranchCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress))">&lt;/xsl:value-of>
              &lt;/ns6:BICFI>
            &lt;/ns6:FinInstnId>
          &lt;/ns6:FIId>
        &lt;/ns6:Fr>
        &lt;ns6:To>
          &lt;ns6:FIId>
            &lt;ns6:FinInstnId>
              &lt;ns6:BICFI>
                &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.generateTReceiver(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:DestinationAddress))">&lt;/xsl:value-of>
              &lt;/ns6:BICFI>
            &lt;/ns6:FinInstnId>
          &lt;/ns6:FIId>
        &lt;/ns6:To>
        &lt;ns6:BizMsgIdr>
          &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F20a/ns3:F20">&lt;/xsl:value-of>
        &lt;/ns6:BizMsgIdr>
        &lt;ns6:MsgDefIdr>
          &lt;xsl:value-of select="'pacs.008.001.08'">&lt;/xsl:value-of>
        &lt;/ns6:MsgDefIdr>
        &lt;ns6:BizSvc>
          &lt;xsl:variable name="if0">
            &lt;xsl:choose>
              &lt;xsl:when test="($document_IN_PORT/ns1:FinMessage/ns1:Block3/ns1:F119)=('STP')">
                &lt;xsl:value-of select="'swift.cbprplus.stp.01'">&lt;/xsl:value-of>
              &lt;/xsl:when>
              &lt;xsl:otherwise>
                &lt;xsl:value-of select="'swift.cbprplus.01'">&lt;/xsl:value-of>
              &lt;/xsl:otherwise>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select="$if0">&lt;/xsl:value-of>
          &lt;xsl:value-of select="java:_setStringProperty($_TIF_MESSAGE_, 'isSTP', ($document_IN_PORT/ns1:FinMessage/ns1:Block3/ns1:F119)=('STP'))">&lt;/xsl:value-of>
        &lt;/ns6:BizSvc>
        &lt;ns6:CreDt>
          &lt;xsl:value-of select="'9999-12-31T00:00:00+00:00'">&lt;/xsl:value-of>
        &lt;/ns6:CreDt>
        &lt;ns6:PssblDplct>
          &lt;xsl:value-of select="boolean($document_IN_PORT/ns1:FinMessage/ns1:Block5/ns1:PDE)">&lt;/xsl:value-of>
        &lt;/ns6:PssblDplct>
        &lt;ns6:Prty>
          &lt;xsl:variable name="if1">
            &lt;xsl:choose>
              &lt;xsl:when test="(translate($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessagePriority,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ'))=('U')">
                &lt;xsl:value-of select="'HIGH'">&lt;/xsl:value-of>
              &lt;/xsl:when>
              &lt;xsl:otherwise>
                &lt;xsl:value-of select="'NORM'">&lt;/xsl:value-of>
              &lt;/xsl:otherwise>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select="$if1">&lt;/xsl:value-of>
        &lt;/ns6:Prty>
      &lt;/ns6:AppHdr>
      &lt;ns2:Document>
        &lt;ns2:FIToFICstmrCdtTrf>
          &lt;ns2:GrpHdr>
            &lt;ns2:MsgId>
              &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F20a/ns3:F20">&lt;/xsl:value-of>
            &lt;/ns2:MsgId>
            &lt;ns2:CreDtTm>
              &lt;xsl:value-of select="'9999-12-31T00:00:00+00:00'">&lt;/xsl:value-of>
            &lt;/ns2:CreDtTm>
            &lt;ns2:NbOfTxs>
              &lt;xsl:value-of select="'1'">&lt;/xsl:value-of>
            &lt;/ns2:NbOfTxs>
            &lt;ns2:SttlmInf>
              &lt;ns2:SttlmMtd>
                &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.settlementMethodfrom53_54(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53B),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53B/ns3:PartyIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53B/ns3:Location),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:IdentifierCode),string(MT2MX:com.fiorano.funclet.MTtoMX.generateTSender(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:LTIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:BranchCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress))),string(MT2MX:com.fiorano.funclet.MTtoMX.generateTReceiver(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:DestinationAddress))),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:IdentifierCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a))">&lt;/xsl:value-of>
              &lt;/ns2:SttlmMtd>
              &lt;ns2:SttlmAcct>
                &lt;ns2:Id>
                  &lt;ns2:Othr>
                    &lt;ns2:Id>
                      &lt;xsl:variable name="if2">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53B/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53B/ns3:PartyIdentifier,'//CH'))">
                            &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53B/ns3:PartyIdentifier">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($if2))">&lt;/xsl:value-of>
                    &lt;/ns2:Id>
                    &lt;ns2:SchmeNm>
                      &lt;ns2:Cd>
                        &lt;xsl:variable name="if3">
                          &lt;xsl:choose>
                            &lt;xsl:when test="starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53B/ns3:PartyIdentifier,'//CH')">
                              &lt;xsl:value-of select="'CUID'">&lt;/xsl:value-of>
                            &lt;/xsl:when>
                          &lt;/xsl:choose>
                        &lt;/xsl:variable>
                        &lt;xsl:value-of select="$if3">&lt;/xsl:value-of>
                      &lt;/ns2:Cd>
                    &lt;/ns2:SchmeNm>
                  &lt;/ns2:Othr>
                &lt;/ns2:Id>
              &lt;/ns2:SttlmAcct>
              &lt;ns2:InstgRmbrsmntAgt>
                &lt;ns2:FinInstnId>
                  &lt;ns2:BICFI>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:IdentifierCode">&lt;/xsl:value-of>
                  &lt;/ns2:BICFI>
                  &lt;ns2:ClrSysMmbId>
                    &lt;ns2:MmbId>
                      &lt;xsl:variable name="if4">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:PartyIdentifier),'//') and not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:PartyIdentifier),'//CH')))">
                            &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:PartyIdentifier)">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if4))">&lt;/xsl:value-of>
                    &lt;/ns2:MmbId>
                  &lt;/ns2:ClrSysMmbId>
                  &lt;ns2:Nm>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:NameAndAddress/ns3:Line">&lt;/xsl:value-of>
                  &lt;/ns2:Nm>
                  &lt;ns2:PstlAdr>&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:IdentifierCode)">&#xd;
&#xd;
&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:NameAndAddress/ns3:Line">&#xd;
	&lt;xsl:if test="position()&amp;gt;('1')">
                    &lt;ns2:AdrLine>&lt;xsl:value-of select=".">&lt;/xsl:value-of>&lt;/ns2:AdrLine>&lt;/xsl:if>&#xd;
&lt;/xsl:for-each>&#xd;
&lt;ns2:AdrLine>&#xd;
                  &lt;xsl:variable name="if3">&#xd;
                    &lt;xsl:choose>&#xd;
                      &lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:NameAndAddress/ns3:Line[2])) &#xd;
					  and MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:IdentifierCode))">&#xd;
                        &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>&#xd;
                      &lt;/xsl:when>&#xd;
                    &lt;/xsl:choose>&#xd;
                  &lt;/xsl:variable>&#xd;
                  &lt;xsl:value-of select="$if3">&lt;/xsl:value-of>&#xd;
                &lt;/ns2:AdrLine>&#xd;
&lt;/xsl:if>&lt;/ns2:PstlAdr>
                &lt;/ns2:FinInstnId>
              &lt;/ns2:InstgRmbrsmntAgt>
              &lt;ns2:InstgRmbrsmntAgtAcct>
                &lt;ns2:Id>
                  &lt;ns2:Othr>
                    &lt;ns2:Id>
                      &lt;xsl:variable name="if5">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:PartyIdentifier),'//')) or starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:PartyIdentifier),'//CH'))">
                            &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:PartyIdentifier)">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($if5))">&lt;/xsl:value-of>
                    &lt;/ns2:Id>
                    &lt;ns2:SchmeNm>
                      &lt;ns2:Cd>
                        &lt;xsl:variable name="if6">
                          &lt;xsl:choose>
                            &lt;xsl:when test="starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F53a/ns3:F53D/ns3:PartyIdentifier),'//CH')">
                              &lt;xsl:value-of select="'CUID'">&lt;/xsl:value-of>
                            &lt;/xsl:when>
                          &lt;/xsl:choose>
                        &lt;/xsl:variable>
                        &lt;xsl:value-of select="$if6">&lt;/xsl:value-of>
                      &lt;/ns2:Cd>
                    &lt;/ns2:SchmeNm>
                  &lt;/ns2:Othr>
                &lt;/ns2:Id>
              &lt;/ns2:InstgRmbrsmntAgtAcct>
              &lt;ns2:InstdRmbrsmntAgt>
                &lt;ns2:FinInstnId>
                  &lt;ns2:BICFI>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:IdentifierCode">&lt;/xsl:value-of>
                  &lt;/ns2:BICFI>
                  &lt;ns2:ClrSysMmbId>
                    &lt;ns2:MmbId>
                      &lt;xsl:variable name="if7">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:PartyIdentifier),'//') and not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:PartyIdentifier),'//CH')))">
                            &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:PartyIdentifier)">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if7))">&lt;/xsl:value-of>
                    &lt;/ns2:MmbId>
                  &lt;/ns2:ClrSysMmbId>
                  &lt;ns2:Nm>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:NameAndAddress/ns3:Line">&lt;/xsl:value-of>
                    &lt;xsl:variable name="if8">
                      &lt;xsl:choose>
                        &lt;xsl:when test="((not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:Location))) and MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier))) or (MT2MX:com.fiorano.funclet.MTtoMX.IsMTClearingSystemCodeInList(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier)))=('true') or (not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:Location))) and (MT2MX:com.fiorano.funclet.MTtoMX.IsMTClearingSystemCodeInList(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier)))=('true')) or (not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier))) and (not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier,'//CH'))))">
                          &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="$if8">&lt;/xsl:value-of>
                  &lt;/ns2:Nm>
                  &lt;ns2:PstlAdr>
                    &lt;ns2:AdrLine>
                      &lt;xsl:variable name="if9">
                        &lt;xsl:choose>
                          &lt;xsl:when test="((not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:Location))) and MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier))) or (not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier,'//CH')))">
                            &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:Location">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                          &lt;xsl:when test="((not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:PartyIdentifier,'//CH')) and MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54B/ns3:Location)))">
                            &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="$if9">&lt;/xsl:value-of>
                    &lt;/ns2:AdrLine>&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D)">&#xd;
	&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:NameAndAddress/ns3:Line">&#xd;
		&lt;xsl:if test="position()&amp;gt;('1')">&#xd;
			&lt;ns2:AdrLine>&#xd;
			&lt;xsl:value-of select=".">&lt;/xsl:value-of>&#xd;
			&lt;/ns2:AdrLine>&#xd;
	&#xd;
	&lt;/xsl:if>&#xd;
	&lt;/xsl:for-each>&#xd;
	&lt;ns2:AdrLine>&#xd;
		&lt;xsl:variable name="if3">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:NameAndAddress/ns3:Line[2]))">&#xd;
					&lt;xsl:value-of select="'NOTPROVIDED'"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if3"/>&#xd;
	&lt;/ns2:AdrLine>&#xd;
&lt;/xsl:if>&lt;/ns2:PstlAdr>
                &lt;/ns2:FinInstnId>
              &lt;/ns2:InstdRmbrsmntAgt>
              &lt;ns2:InstdRmbrsmntAgtAcct>
                &lt;ns2:Id>
                  &lt;ns2:Othr>
                    &lt;ns2:Id>
                      &lt;xsl:variable name="if10">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:PartyIdentifier),'//')) or starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:PartyIdentifier),'//CH'))">
                            &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:PartyIdentifier)">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($if10))">&lt;/xsl:value-of>
                    &lt;/ns2:Id>
                    &lt;ns2:SchmeNm>
                      &lt;ns2:Cd>
                        &lt;xsl:variable name="if11">
                          &lt;xsl:choose>
                            &lt;xsl:when test="starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F54a/ns3:F54D/ns3:PartyIdentifier),'//CH')">
                              &lt;xsl:value-of select="'CUID'">&lt;/xsl:value-of>
                            &lt;/xsl:when>
                          &lt;/xsl:choose>
                        &lt;/xsl:variable>
                        &lt;xsl:value-of select="$if11">&lt;/xsl:value-of>
                      &lt;/ns2:Cd>
                    &lt;/ns2:SchmeNm>
                  &lt;/ns2:Othr>
                &lt;/ns2:Id>
              &lt;/ns2:InstdRmbrsmntAgtAcct>
              &lt;ns2:ThrdRmbrsmntAgt>
                &lt;ns2:FinInstnId>
                  &lt;ns2:BICFI>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55A/ns3:IdentifierCode">&lt;/xsl:value-of>
                  &lt;/ns2:BICFI>
                  &lt;ns2:ClrSysMmbId>
                    &lt;ns2:MmbId>
                      &lt;xsl:variable name="if12">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:PartyIdentifier),'//') and not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:PartyIdentifier),'//CH')))">
                            &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:PartyIdentifier)">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if12))">&lt;/xsl:value-of>
                    &lt;/ns2:MmbId>
                  &lt;/ns2:ClrSysMmbId>
                  &lt;ns2:Nm>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:NameAndAddress/ns3:Line">&lt;/xsl:value-of>
                  &lt;/ns2:Nm>
                  &lt;ns2:PstlAdr>&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55A/ns3:IdentifierCode)">&#xd;
&#xd;
&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:NameAndAddress/ns3:Line">&#xd;
	&lt;xsl:if test="position()&amp;gt;('1')">
                    &lt;ns2:AdrLine>&lt;xsl:value-of select=".">&lt;/xsl:value-of>&lt;/ns2:AdrLine>&lt;/xsl:if>&#xd;
&lt;/xsl:for-each>&#xd;
&lt;ns2:AdrLine>&#xd;
                  &lt;xsl:variable name="if3">&#xd;
                    &lt;xsl:choose>&#xd;
                      &lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:NameAndAddress/ns3:Line[2]))">&#xd;
                        &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>&#xd;
                      &lt;/xsl:when>&#xd;
                    &lt;/xsl:choose>&#xd;
                  &lt;/xsl:variable>&#xd;
                  &lt;xsl:value-of select="$if3">&lt;/xsl:value-of>&#xd;
                &lt;/ns2:AdrLine>&#xd;
&lt;/xsl:if>&lt;/ns2:PstlAdr>
                &lt;/ns2:FinInstnId>
              &lt;/ns2:ThrdRmbrsmntAgt>
              &lt;ns2:ThrdRmbrsmntAgtAcct>
                &lt;ns2:Id>
                  &lt;ns2:Othr>
                    &lt;ns2:Id>
                      &lt;xsl:variable name="if13">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:PartyIdentifier,'//CH'))">
                            &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:PartyIdentifier">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($if13))">&lt;/xsl:value-of>
                    &lt;/ns2:Id>
                    &lt;ns2:SchmeNm>
                      &lt;ns2:Cd>
                        &lt;xsl:variable name="if14">
                          &lt;xsl:choose>
                            &lt;xsl:when test="starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F55a/ns3:F55D/ns3:PartyIdentifier,'//CH')">
                              &lt;xsl:value-of select="'CUID'">&lt;/xsl:value-of>
                            &lt;/xsl:when>
                          &lt;/xsl:choose>
                        &lt;/xsl:variable>
                        &lt;xsl:value-of select="$if14">&lt;/xsl:value-of>
                      &lt;/ns2:Cd>
                    &lt;/ns2:SchmeNm>
                  &lt;/ns2:Othr>
                &lt;/ns2:Id>
              &lt;/ns2:ThrdRmbrsmntAgtAcct>
            &lt;/ns2:SttlmInf>
          &lt;/ns2:GrpHdr>
          &lt;ns2:CdtTrfTxInf>
            &lt;ns2:PmtId>
              &lt;ns2:InstrId>
                &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F20a/ns3:F20">&lt;/xsl:value-of>
              &lt;/ns2:InstrId>
              &lt;ns2:EndToEndId>
                &lt;xsl:variable name="if15">
                  &lt;xsl:choose>
                    &lt;xsl:when test="contains($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F70a/ns3:F70,'/ROC/')">
                      &lt;xsl:value-of select="MTtoMXUtil:com.fiorano.funclet.MTtoMXUtil.mt70ROC_To_MX35Text(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F70a/ns3:F70))">&lt;/xsl:value-of>
                    &lt;/xsl:when>
                    &lt;xsl:otherwise>
                      &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>
                    &lt;/xsl:otherwise>
                  &lt;/xsl:choose>
                &lt;/xsl:variable>
                &lt;xsl:value-of select="$if15">&lt;/xsl:value-of>
              &lt;/ns2:EndToEndId>
              &lt;ns2:UETR>
                &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block3/ns1:F121">&lt;/xsl:value-of>
              &lt;/ns2:UETR>
            &lt;/ns2:PmtId>
            &lt;ns2:PmtTpInf>
              &lt;ns2:ClrChanl>
                &lt;xsl:variable name="if16">
                  &lt;xsl:choose>
                    &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//FW') or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//RT') or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C,'//RT') or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56D/ns3:PartyIdentifier,'//RT') or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//RT') or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//FW') or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//RT') or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier,'//RT'))">
                      &lt;xsl:value-of select="'RTGS'">&lt;/xsl:value-of>
                    &lt;/xsl:when>
                  &lt;/xsl:choose>
                &lt;/xsl:variable>
                &lt;xsl:value-of select="$if16">&lt;/xsl:value-of>
              &lt;/ns2:ClrChanl>
              &lt;ns2:SvcLvl>
                &lt;ns2:Cd>
                  &lt;xsl:variable name="if17">
                    &lt;xsl:choose>
                      &lt;xsl:when test="starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block3/ns1:F111,'00')">
                        &lt;xsl:value-of select="concat('G',$document_IN_PORT/ns1:FinMessage/ns1:Block3/ns1:F111)">&lt;/xsl:value-of>
                      &lt;/xsl:when>
                      &lt;xsl:otherwise>
                        &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block3/ns1:F111">&lt;/xsl:value-of>
                      &lt;/xsl:otherwise>
                    &lt;/xsl:choose>
                  &lt;/xsl:variable>
                  &lt;xsl:value-of select="$if17">&lt;/xsl:value-of>
                &lt;/ns2:Cd>
              &lt;/ns2:SvcLvl>&lt;ns2:SvcLvl>&#xd;
		    &lt;ns2:Cd>&#xd;
			  &lt;xsl:choose>&#xd;
                &lt;xsl:when test="($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F23a_2/ns3:F23E/ns3:InstructionCode)=('SDVA')">&#xd;
                  &lt;xsl:value-of select="'SDVA'">&lt;/xsl:value-of>&#xd;
				&lt;/xsl:when>&#xd;
			  &lt;/xsl:choose>&#xd;
			&lt;/ns2:Cd>&#xd;
		  &lt;/ns2:SvcLvl>
              &lt;ns2:CtgyPurp>
                &lt;ns2:Cd>&lt;xsl:variable name="INTCMatched" select="($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F23a_2/ns3:F23E/ns3:InstructionCode)=('INTC')" />&#xd;
			  &lt;xsl:choose>&#xd;
                &lt;xsl:when test="($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F23a_2/ns3:F23E/ns3:InstructionCode)=('INTC')">&#xd;
                  &lt;xsl:value-of select="'INTC'">&lt;/xsl:value-of>&#xd;
				&lt;/xsl:when>&#xd;
			  &lt;/xsl:choose>&#xd;
			  &lt;xsl:choose>&#xd;
				&lt;xsl:when test="($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F23a_2/ns3:F23E/ns3:InstructionCode)=('CORT')">&#xd;
				  &lt;xsl:choose>&#xd;
				    &lt;xsl:when test="($INTCMatched)">&#xd;
                      &lt;xsl:value-of select="' CORT'">&lt;/xsl:value-of>&#xd;
					&lt;/xsl:when>&#xd;
					&lt;xsl:otherwise>&#xd;
                      &lt;xsl:value-of select="'CORT'">&lt;/xsl:value-of>&#xd;
					&lt;/xsl:otherwise>&#xd;
				  &lt;/xsl:choose>&#xd;
				&lt;/xsl:when>&#xd;
			  &lt;/xsl:choose>&lt;/ns2:Cd>
              &lt;/ns2:CtgyPurp>
            &lt;/ns2:PmtTpInf>
            &lt;ns2:IntrBkSttlmAmt>
              &lt;xsl:attribute name="Ccy">
                &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F32a/ns3:F32A/ns3:Currency">&lt;/xsl:value-of>
              &lt;/xsl:attribute>
              &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXAmount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F32a/ns3:F32A/ns3:Amount))">&lt;/xsl:value-of>
            &lt;/ns2:IntrBkSttlmAmt>
            &lt;ns2:IntrBkSttlmDt>
              &lt;xsl:value-of select="dateConversion:convertDate(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F32a/ns3:F32A/ns3:Date),string('yyMMdd'),string('yyyy-MM-dd'))">&lt;/xsl:value-of>
            &lt;/ns2:IntrBkSttlmDt>
            &lt;ns2:SttlmTmIndctn>
              &lt;ns2:DbtDtTm>&lt;xsl:for-each select = "$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F13a/ns3:F13C"> &#xd;
                  &lt;xsl:choose>&#xd;
                  &lt;xsl:when test="(ns3:Code)=('SNDTIME')">&#xd;
                   &lt;xsl:value-of select="concat('0001-01-01T',substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))">&lt;/xsl:value-of>&#xd;
               &lt;/xsl:when>&#xd;
                  &lt;/xsl:choose>&#xd;
				 &lt;/xsl:for-each>&lt;/ns2:DbtDtTm>
              &lt;ns2:CdtDtTm>&lt;xsl:for-each select = "$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F13a/ns3:F13C"> &#xd;
              &lt;xsl:choose>&#xd;
               &lt;xsl:when test="(ns3:Code)=('RNCTIME')">&#xd;
                &lt;xsl:value-of select="concat('0001-01-01T',substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))">&lt;/xsl:value-of>&#xd;
               &lt;/xsl:when>&#xd;
              &lt;/xsl:choose>&#xd;
			 &lt;/xsl:for-each>&lt;/ns2:CdtDtTm>
            &lt;/ns2:SttlmTmIndctn>
            &lt;ns2:SttlmTmReq>
              &lt;ns2:CLSTm>&lt;xsl:for-each select = "$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F13a/ns3:F13C"> &#xd;
              &lt;xsl:choose>&#xd;
               &lt;xsl:when test="(ns3:Code)=('CLSTIME')">&#xd;
                &lt;xsl:value-of select="concat(substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))">&lt;/xsl:value-of>&#xd;
               &lt;/xsl:when>&#xd;
              &lt;/xsl:choose>&#xd;
			 &lt;/xsl:for-each>&lt;/ns2:CLSTm>
              &lt;ns2:TillTm>&lt;xsl:for-each select = "$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F13a/ns3:F13C"> &#xd;
              &lt;xsl:choose>&#xd;
               &lt;xsl:when test="(ns3:Code)=('TILTIME')">&#xd;
                &lt;xsl:value-of select="concat(substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))">&lt;/xsl:value-of>&#xd;
               &lt;/xsl:when>&#xd;
              &lt;/xsl:choose>&#xd;
			 &lt;/xsl:for-each>&lt;/ns2:TillTm>
              &lt;ns2:FrTm>&lt;xsl:for-each select = "$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F13a/ns3:F13C"> &#xd;
              &lt;xsl:choose>&#xd;
               &lt;xsl:when test="(ns3:Code)=('FROTIME')">&#xd;
                &lt;xsl:value-of select="concat(substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))">&lt;/xsl:value-of>&#xd;
               &lt;/xsl:when>&#xd;
              &lt;/xsl:choose>&#xd;
			 &lt;/xsl:for-each>&lt;/ns2:FrTm>
              &lt;ns2:RjctTm>&lt;xsl:for-each select = "$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F13a/ns3:F13C"> &#xd;
              &lt;xsl:choose>&#xd;
               &lt;xsl:when test="(ns3:Code)=('REJTIME')">&#xd;
                &lt;xsl:value-of select="concat(substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))">&lt;/xsl:value-of>&#xd;
               &lt;/xsl:when>&#xd;
              &lt;/xsl:choose>&#xd;
			 &lt;/xsl:for-each>&lt;/ns2:RjctTm>
            &lt;/ns2:SttlmTmReq>
            &lt;ns2:InstdAmt>
              &lt;xsl:attribute name="Ccy">
                &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F33a/ns3:F33B/ns3:Currency">&lt;/xsl:value-of>
              &lt;/xsl:attribute>
              &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXAmount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F33a/ns3:F33B/ns3:Amount))">&lt;/xsl:value-of>
            &lt;/ns2:InstdAmt>
            &lt;ns2:XchgRate>
              &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXRate(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F36a/ns3:F36))">&lt;/xsl:value-of>
            &lt;/ns2:XchgRate>
            &lt;ns2:ChrgBr>
              &lt;xsl:variable name="if18">
                &lt;xsl:choose>
                  &lt;xsl:when test="($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F71a_1/ns3:F71A)=('BEN')">
                    &lt;xsl:value-of select="'CRED'">&lt;/xsl:value-of>
                  &lt;/xsl:when>
                  &lt;xsl:when test="($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F71a_1/ns3:F71A)=('OUR')">
                    &lt;xsl:value-of select="'DEBT'">&lt;/xsl:value-of>
                  &lt;/xsl:when>
                  &lt;xsl:when test="($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F71a_1/ns3:F71A)=('SHA')">
                    &lt;xsl:value-of select="'SHAR'">&lt;/xsl:value-of>
                  &lt;/xsl:when>
                &lt;/xsl:choose>
              &lt;/xsl:variable>
              &lt;xsl:value-of select="$if18">&lt;/xsl:value-of>
            &lt;/ns2:ChrgBr>&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F71a_2/ns3:F71F">&#xd;
	&lt;ns2:ChrgsInf>&#xd;
		&lt;ns2:Amt>&#xd;
			&lt;xsl:attribute name="Ccy">&#xd;
				&lt;xsl:value-of select="./ns3:Currency"/>&#xd;
			&lt;/xsl:attribute>&#xd;
			&lt;xsl:value-of select="MTtoMXUtil:com.fiorano.funclet.MTtoMXUtil.MT_To_MXCurrencyAmount(string(./ns3:Amount))"/>&#xd;
		&lt;/ns2:Amt>&#xd;
		&lt;ns2:Agt>&#xd;
			&lt;ns2:FinInstnId>&#xd;
				&lt;ns2:Nm>&#xd;
					&lt;xsl:value-of select="'NOTPROVIDED'"/>&#xd;
				&lt;/ns2:Nm>&#xd;
				&lt;ns2:PstlAdr>&#xd;
					&lt;ns2:AdrLine>&#xd;
						&lt;xsl:value-of select="'NOTPROVIDED'"/>&#xd;
					&lt;/ns2:AdrLine>&#xd;
				&lt;/ns2:PstlAdr>&#xd;
			&lt;/ns2:FinInstnId>&#xd;
		&lt;/ns2:Agt>&#xd;
	&lt;/ns2:ChrgsInf>&#xd;
&lt;/xsl:for-each>
            &lt;ns2:ChrgsInf>
              &lt;ns2:Amt>
                &lt;xsl:attribute name="Ccy">
                  &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F71a_3/ns3:F71G/ns3:Currency">&lt;/xsl:value-of>
                &lt;/xsl:attribute>
                &lt;xsl:value-of select="MTtoMXUtil:com.fiorano.funclet.MTtoMXUtil.MT_To_MXCurrencyAmount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F71a_3/ns3:F71G/ns3:Amount))">&lt;/xsl:value-of>
              &lt;/ns2:Amt>
              &lt;ns2:Agt>
                &lt;ns2:FinInstnId>
                  &lt;ns2:BICFI>
                    &lt;xsl:variable name="if19">
                      &lt;xsl:choose>
                        &lt;xsl:when test="boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F71a_3/ns3:F71G)">
                          &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.generateTReceiver(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:DestinationAddress))">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="$if19">&lt;/xsl:value-of>
                  &lt;/ns2:BICFI>
                &lt;/ns2:FinInstnId>
              &lt;/ns2:Agt>
            &lt;/ns2:ChrgsInf>
            &lt;ns2:InstgAgt>
              &lt;ns2:FinInstnId>
                &lt;ns2:BICFI>
                  &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.generateTSender(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:LTIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:BranchCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress))">&lt;/xsl:value-of>
                &lt;/ns2:BICFI>
              &lt;/ns2:FinInstnId>
            &lt;/ns2:InstgAgt>
            &lt;ns2:InstdAgt>
              &lt;ns2:FinInstnId>
                &lt;ns2:BICFI>
                  &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.generateTReceiver(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:DestinationAddress))">&lt;/xsl:value-of>
                &lt;/ns2:BICFI>
              &lt;/ns2:FinInstnId>
            &lt;/ns2:InstdAgt>
            &lt;ns2:IntrmyAgt1>
              &lt;ns2:FinInstnId>
                &lt;ns2:BICFI>
                  &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:IdentifierCode">&lt;/xsl:value-of>
                &lt;/ns2:BICFI>
                &lt;ns2:ClrSysMmbId>
                  &lt;ns2:MmbId>
                    &lt;xsl:variable name="if20">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//CH')) and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//RT')) and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//FW')))">
                          &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if20))">&lt;/xsl:value-of>
                    &lt;xsl:variable name="if21">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56D/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56D/ns3:PartyIdentifier,'//CH')))">
                          &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56D/ns3:PartyIdentifier">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if21))">&lt;/xsl:value-of>&lt;xsl:variable name="if25">&#xd;
                        &lt;xsl:choose>&#xd;
                          &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//CH')))">&#xd;
                            &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier)">&lt;/xsl:value-of>&#xd;
                          &lt;/xsl:when>&#xd;
                        &lt;/xsl:choose>&#xd;
                      &lt;/xsl:variable>&#xd;
  &lt;xsl:value-of select="$if25">&lt;/xsl:value-of>&lt;/ns2:MmbId>
                &lt;/ns2:ClrSysMmbId>
                &lt;ns2:Nm>&lt;xsl:variable name="if26">&#xd;
                        &lt;xsl:choose>&#xd;
                          &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//CH')))">&#xd;
                            &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier)">&lt;/xsl:value-of>&#xd;
                          &lt;/xsl:when>&#xd;
                        &lt;/xsl:choose>&#xd;
                      &lt;/xsl:variable>&#xd;
&lt;xsl:choose>&#xd;
&#xd;
&lt;xsl:when test="$if26  != '' ">&#xd;
                                     &lt;xsl:value-of select="NOTPROVIDED">&lt;/xsl:value-of>     &#xd;
    &lt;/xsl:when>&#xd;
&lt;xsl:otherwise>&#xd;
                                     &lt;xsl:value-of select="$if26">&lt;/xsl:value-of>     &#xd;
&#xd;
&lt;/xsl:otherwise>&#xd;
&#xd;
&lt;/xsl:choose>&lt;/ns2:Nm>
                &lt;ns2:PstlAdr>&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56D/ns3:NameAndAddress/ns3:Line">&#xd;
	&lt;xsl:if test="position()&amp;gt;('1')">&#xd;
	&#xd;
	                  &lt;ns2:AdrLine>&#xd;
&#xd;
&lt;xsl:value-of select=".">&lt;/xsl:value-of>&#xd;
&lt;/ns2:AdrLine>&#xd;
&#xd;
&lt;/xsl:if>&#xd;
&#xd;
&lt;ns2:AdrLine>&#xd;
                  &lt;xsl:variable name="if3">&#xd;
                    &lt;xsl:choose>&#xd;
                      &lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56D/ns3:NameAndAddress/ns3:Line[2]))">&#xd;
                        &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>&#xd;
                      &lt;/xsl:when>&#xd;
                    &lt;/xsl:choose>&#xd;
                  &lt;/xsl:variable>&#xd;
                  &lt;xsl:value-of select="$if3">&lt;/xsl:value-of>&#xd;
                &lt;/ns2:AdrLine>&#xd;
				&#xd;
				&lt;/xsl:for-each>
                  &lt;ns2:AdrLine>&lt;xsl:variable name="if27">&#xd;
                        &lt;xsl:choose>&#xd;
                          &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//CH')))">&#xd;
                            &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C/ns3:PartyIdentifier)">&lt;/xsl:value-of>&#xd;
                          &lt;/xsl:when>&#xd;
                        &lt;/xsl:choose>&#xd;
                      &lt;/xsl:variable>&#xd;
                        &#xd;
&lt;xsl:choose>&#xd;
&#xd;
&lt;xsl:when test="$if27  != '' ">&#xd;
                                     &lt;xsl:value-of select="NOTPROVIDED">&lt;/xsl:value-of>     &#xd;
    &lt;/xsl:when>&#xd;
&lt;xsl:otherwise>&#xd;
                                     &lt;xsl:value-of select="$if27">&lt;/xsl:value-of>     &#xd;
&#xd;
&lt;/xsl:otherwise>&#xd;
&#xd;
&lt;/xsl:choose>&lt;/ns2:AdrLine>
                &lt;/ns2:PstlAdr>
              &lt;/ns2:FinInstnId>
            &lt;/ns2:IntrmyAgt1>
            &lt;ns2:IntrmyAgt1Acct>
              &lt;ns2:Id>
                &lt;ns2:Othr>
                  &lt;ns2:Id>
                    &lt;xsl:variable name="if22">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C),'//')) or starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C),'//CH'))">
                          &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F56a/ns3:F56C)">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($if22))">&lt;/xsl:value-of>
                  &lt;/ns2:Id>
                &lt;/ns2:Othr>
              &lt;/ns2:Id>
            &lt;/ns2:IntrmyAgt1Acct>
            &lt;ns2:Dbtr>
              &lt;ns2:Nm>&lt;xsl:variable name="LineSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFLINE'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&#xd;
&#xd;
&lt;xsl:variable name="AppendedPostalAddress2">&#xd;
	&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:NameAndAddress/ns3:Lines2to5">&#xd;
		&lt;xsl:value-of select="./ns3:Number"/>&#xd;
		&lt;xsl:value-of select="./ns3:Details"/>&#xd;
		&lt;xsl:value-of select="$LineSeparator"/>&#xd;
	&lt;/xsl:for-each>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:choose>		&#xd;
			 &#xd;
			 	 &lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:NameAndAddress/ns3:Line)">&#xd;
   &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:NameAndAddress/ns3:Line">&lt;/xsl:value-of>&#xd;
			 &lt;/xsl:when>	&#xd;
			 &#xd;
			 	 &lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:NameAndAddress/ns3:Lines2to5)">&#xd;
   &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MXPartyNameAndStructuredAddress_Name(string($AppendedPostalAddress2), string($LineSeparator))">&lt;/xsl:value-of>&#xd;
			 &lt;/xsl:when>&#xd;
&lt;/xsl:choose>&lt;/ns2:Nm>
              &lt;ns2:PstlAdr>&lt;xsl:variable name="LineSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFLINE'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&#xd;
&#xd;
&lt;xsl:variable name="AppendedPostalAddress2">&#xd;
	&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:NameAndAddress/ns3:Lines2to5">&#xd;
		&lt;xsl:value-of select="./ns3:Number"/>&#xd;
		&lt;xsl:value-of select="./ns3:Details"/>&#xd;
		&lt;xsl:value-of select="$LineSeparator"/>&#xd;
	&lt;/xsl:for-each>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:choose>		&#xd;
			 &#xd;
			 	 &lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:NameAndAddress/ns3:Line)">&#xd;
&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:NameAndAddress/ns3:Line">&#xd;
	&lt;xsl:if test="position()&amp;gt;('1')">&#xd;
		&lt;ns2:AdrLine>&#xd;
			&lt;xsl:value-of select="."/>&#xd;
		&lt;/ns2:AdrLine>&#xd;
	&lt;/xsl:if>&#xd;
&#xd;
	&lt;ns2:AdrLine>&#xd;
		&lt;xsl:variable name="if3">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:NameAndAddress/ns3:Line[2]))">&#xd;
					&lt;xsl:value-of select="'NOTPROVIDED'"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if3"/>&#xd;
	&lt;/ns2:AdrLine>&#xd;
&lt;/xsl:for-each>&#xd;
&lt;/xsl:when>&#xd;
&#xd;
&lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:NameAndAddress/ns3:Lines2to5)">&#xd;
&#xd;
&lt;xsl:variable name="ResultantPostalAddress">&#xd;
   &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MXPartyNameAndStructuredAddress_PostalAddress(string($AppendedPostalAddress2), string($LineSeparator))">&lt;/xsl:value-of>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&#xd;
&lt;xsl:call-template name="tokenize">&#xd;
	&lt;xsl:with-param name="text" select="$ResultantPostalAddress"/>&#xd;
	&lt;xsl:with-param name="separator" select="$LineSeparator"/>&#xd;
&lt;/xsl:call-template>&#xd;
&lt;/xsl:when>&#xd;
&lt;/xsl:choose>&lt;/ns2:PstlAdr>
              &lt;ns2:Id>
                &lt;ns2:OrgId>
                  &lt;ns2:AnyBIC>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A/ns3:IdentifierCode">&lt;/xsl:value-of>
                  &lt;/ns2:AnyBIC>
                  &lt;ns2:Othr>
                    &lt;ns2:Id>
                      &lt;xsl:variable name="if23">
                        &lt;xsl:choose>
                          &lt;xsl:when test="((boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A) and not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A/ns3:Account))) or (boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K) and not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:Account))))">
                            &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="$if23">&lt;/xsl:value-of>
                    &lt;/ns2:Id>
                    &lt;ns2:SchmeNm>
                      &lt;ns2:Cd>
                        &lt;xsl:variable name="if24">
                          &lt;xsl:choose>
                            &lt;xsl:when test="((boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A) and not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A/ns3:Account))) or (boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K) and not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:Account))))">
                              &lt;xsl:value-of select="'TXID'">&lt;/xsl:value-of>
                            &lt;/xsl:when>
                          &lt;/xsl:choose>
                        &lt;/xsl:variable>
                        &lt;xsl:value-of select="$if24">&lt;/xsl:value-of>
                      &lt;/ns2:Cd>
                    &lt;/ns2:SchmeNm>
                  &lt;/ns2:Othr>
                &lt;/ns2:OrgId>
                &lt;ns2:PrvtId>
                  &lt;ns2:Othr>
                    &lt;ns2:Id>
                      &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:PartyIdentifier/ns3:Identifier">&lt;/xsl:value-of>
                    &lt;/ns2:Id>
                    &lt;ns2:SchmeNm>
                      &lt;ns2:Cd>
                        &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:PartyIdentifier/ns3:Code">&lt;/xsl:value-of>
                      &lt;/ns2:Cd>
                    &lt;/ns2:SchmeNm>
                    &lt;ns2:Issr>
                      &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:PartyIdentifier/ns3:CountryCode">&lt;/xsl:value-of>
                    &lt;/ns2:Issr>
                  &lt;/ns2:Othr>
                &lt;/ns2:PrvtId>
              &lt;/ns2:Id>&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F77a/ns3:F77B/ns3:Narrative/ns3:Line">
              &lt;ns2:CtryOfRes>&lt;xsl:variable name="if43">&#xd;
                    &lt;xsl:choose>&#xd;
                      &lt;xsl:when test="contains(.,'/ORDERRES/')">&#xd;
                        &lt;xsl:value-of select="substring-after(.,'/ORDERRES/')">&lt;/xsl:value-of>&#xd;
                      &lt;/xsl:when>&#xd;
                    &lt;/xsl:choose>&#xd;
                  &lt;/xsl:variable>&#xd;
                  &lt;xsl:value-of select="$if43">&lt;/xsl:value-of>&lt;/ns2:CtryOfRes>&lt;/xsl:for-each>&lt;/ns2:Dbtr>
            &lt;ns2:DbtrAcct>
              &lt;ns2:Id>
                &lt;ns2:Othr>
                  &lt;ns2:Id>
                    &lt;xsl:variable name="if25">
                      &lt;xsl:choose>
                        &lt;xsl:when test="starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:PartyIdentifier/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:Account),'//CH')">
                          &lt;xsl:value-of select="substring(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:PartyIdentifier/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:Account),'5')">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                        &lt;xsl:otherwise>
                          &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:PartyIdentifier/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:Account)">&lt;/xsl:value-of>
                        &lt;/xsl:otherwise>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="$if25">&lt;/xsl:value-of>
                  &lt;/ns2:Id>
                  &lt;ns2:SchmeNm>
                    &lt;ns2:Cd>
                      &lt;xsl:variable name="if26">
                        &lt;xsl:choose>
                          &lt;xsl:when test="(substring(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50A/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50F/ns3:PartyIdentifier/ns3:Account,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F50a/ns3:F50K/ns3:Account),'1','4'))=('//CH')">
                            &lt;xsl:value-of select="'CUID'">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="$if26">&lt;/xsl:value-of>
                    &lt;/ns2:Cd>
                  &lt;/ns2:SchmeNm>
                &lt;/ns2:Othr>
              &lt;/ns2:Id>
            &lt;/ns2:DbtrAcct>
            &lt;ns2:DbtrAgt>
              &lt;ns2:FinInstnId>
                &lt;ns2:BICFI>
                  &lt;xsl:variable name="if27">
                    &lt;xsl:choose>
                      &lt;xsl:when test="boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a)">
                        &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:IdentifierCode">&lt;/xsl:value-of>
                      &lt;/xsl:when>
                      &lt;xsl:otherwise>
                        &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.generateTSender(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:LTIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:BranchCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress))">&lt;/xsl:value-of>
                      &lt;/xsl:otherwise>
                    &lt;/xsl:choose>
                  &lt;/xsl:variable>
                  &lt;xsl:value-of select="$if27">&lt;/xsl:value-of>
                &lt;/ns2:BICFI>
                &lt;ns2:ClrSysMmbId>
                  &lt;ns2:MmbId>
                    &lt;xsl:variable name="if28">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,'//CH')) and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,'//FH')))">
                          &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if28))">&lt;/xsl:value-of>
                    &lt;xsl:variable name="if29">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier,'//') and not(starts-with('//CH','//CH')))">
                          &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if29))">&lt;/xsl:value-of>
                  &lt;/ns2:MmbId>
                &lt;/ns2:ClrSysMmbId>
                &lt;ns2:PstlAdr>
                  &lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:NameAndAddress/ns3:Line">
                    &lt;ns2:AdrLine>
                      &lt;xsl:value-of select=".">&lt;/xsl:value-of>
                    &lt;/ns2:AdrLine>
                  &lt;/xsl:for-each>
                &lt;/ns2:PstlAdr>
              &lt;/ns2:FinInstnId>
            &lt;/ns2:DbtrAgt>
            &lt;ns2:DbtrAgtAcct>
              &lt;ns2:Id>
                &lt;ns2:Othr>
                  &lt;ns2:Id>
                    &lt;xsl:variable name="if30">
                      &lt;xsl:choose>
                        &lt;xsl:when test="starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'//CH')">
                          &lt;xsl:value-of select="substring(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'5')">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                        &lt;xsl:when test="(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'/C/') or starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'/D/'))">
                          &lt;xsl:value-of select="substring(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'4')">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                        &lt;xsl:when test="(not((starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'/C/') or starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'/D/'))) and not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'//')))">
                          &lt;xsl:value-of select="substring(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'2')">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="$if30">&lt;/xsl:value-of>
                  &lt;/ns2:Id>
                  &lt;ns2:SchmeNm>
                    &lt;ns2:Cd>
                      &lt;xsl:variable name="if31">
                        &lt;xsl:choose>
                          &lt;xsl:when test="starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F52a/ns3:F52D/ns3:PartyIdentifier),'//CH')">
                            &lt;xsl:value-of select="'CUID'">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="$if31">&lt;/xsl:value-of>
                    &lt;/ns2:Cd>
                  &lt;/ns2:SchmeNm>
                &lt;/ns2:Othr>
              &lt;/ns2:Id>
            &lt;/ns2:DbtrAgtAcct>
            &lt;ns2:CdtrAgt>
              &lt;ns2:FinInstnId>
                &lt;ns2:BICFI>
                  &lt;xsl:variable name="if32">
                    &lt;xsl:choose>
                      &lt;xsl:when test="boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:IdentifierCode)">
                        &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:IdentifierCode">&lt;/xsl:value-of>
                      &lt;/xsl:when>
                      &lt;xsl:otherwise>
                        &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.generateTReceiver(string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:DestinationAddress))">&lt;/xsl:value-of>
                      &lt;/xsl:otherwise>
                    &lt;/xsl:choose>
                  &lt;/xsl:variable>
                  &lt;xsl:value-of select="$if32">&lt;/xsl:value-of>
                &lt;/ns2:BICFI>
                &lt;ns2:ClrSysMmbId>
                  &lt;ns2:MmbId>
                    &lt;xsl:variable name="if33">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//CH')) and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//RT')) and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//FW')))">
                          &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if33))">&lt;/xsl:value-of>
                    &lt;xsl:variable name="if34">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier),'//') and not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier),'//CH')))">
                          &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier)">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($if34))">&lt;/xsl:value-of>&lt;xsl:variable name="if28">&#xd;
	&lt;xsl:choose>&#xd;
		&lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//CH')))">&#xd;
			&lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier)"/>&#xd;
		&lt;/xsl:when>&#xd;
	&lt;/xsl:choose>&#xd;
&lt;/xsl:variable>&#xd;
 &lt;xsl:value-of select="$if28"/>&lt;/ns2:MmbId>
                &lt;/ns2:ClrSysMmbId>&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:IdentifierCode)">
                &lt;ns2:Nm>
                  &lt;xsl:variable name="if35">
                    &lt;xsl:choose>
                      &lt;xsl:when test="((MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier)) and not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:Location)))) or not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//CH') or not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//CH') or ((starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//CH'))) and not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string(MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C)))))))">
                        &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>
                      &lt;/xsl:when>
                      &lt;xsl:when test="((starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//CH'))) and MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string(MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C)))))">
                        &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingSystemToNameAndAddressLine(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C))">&lt;/xsl:value-of>
                      &lt;/xsl:when>
                    &lt;/xsl:choose>
                  &lt;/xsl:variable>
                  &lt;xsl:value-of select="$if35">&lt;/xsl:value-of>
                  &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:NameAndAddress/ns3:Line">&lt;/xsl:value-of>
                &lt;/ns2:Nm>&lt;/xsl:if>
                &lt;ns2:PstlAdr>&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:IdentifierCode)">
                  &lt;ns2:AdrLine>&lt;xsl:variable name="if29">&#xd;
		&lt;xsl:choose>&#xd;
			&lt;xsl:when test="(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//CH')))">&#xd;
				&lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier)"/>&#xd;
			&lt;/xsl:when>&#xd;
		&lt;/xsl:choose>&#xd;
	&lt;/xsl:variable>&#xd;
&#xd;
	&lt;xsl:choose>&#xd;
&#xd;
		&lt;xsl:when test="$if29  != '' ">&#xd;
			&lt;xsl:value-of select="NOTPROVIDED"/>     &#xd;
		&lt;/xsl:when>&#xd;
		&lt;xsl:otherwise>&#xd;
			&lt;xsl:value-of select="$if29"/>     &#xd;
&#xd;
		&lt;/xsl:otherwise>&#xd;
&#xd;
	&lt;/xsl:choose>
                    &lt;xsl:variable name="if36">
                      &lt;xsl:choose>
                        &lt;xsl:when test="((MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier)) and not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:Location)))) or (not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:Location))) and (not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//CH'))))">
                          &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:Location">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                        &lt;xsl:when test="((MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:Location)) and (not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//CH'))) or not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//CH') or ((starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//CH'))) and not(MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string(MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C)))))))">
                          &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                        &lt;xsl:when test="((starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//') and not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,'//CH'))) and MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string(MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C)))))">
                          &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingSystemToNameAndAddressLine(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C))">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="$if36">&lt;/xsl:value-of>
                  &lt;/ns2:AdrLine>&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:NameAndAddress/ns3:Line">&#xd;
	&lt;xsl:if test="position()&amp;gt;('1')">&#xd;
		&lt;ns2:AdrLine>&#xd;
&#xd;
			&lt;xsl:value-of select="."/>&#xd;
		&lt;/ns2:AdrLine>&#xd;
	&lt;/xsl:if>&#xd;
&#xd;
	&lt;ns2:AdrLine>&#xd;
		&lt;xsl:variable name="if30">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:NameAndAddress/ns3:Line[2]))">&#xd;
					&lt;xsl:value-of select="'NOTPROVIDED'"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if30"/>&#xd;
	&lt;/ns2:AdrLine>&#xd;
&lt;/xsl:for-each>&#xd;
&#xd;
&lt;/xsl:if>&lt;/ns2:PstlAdr>
              &lt;/ns2:FinInstnId>
            &lt;/ns2:CdtrAgt>
            &lt;ns2:CdtrAgtAcct>
              &lt;ns2:Id>
                &lt;ns2:Othr>
                  &lt;ns2:Id>
                    &lt;xsl:variable name="if37">
                      &lt;xsl:choose>
                        &lt;xsl:when test="(not(starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier),'//')) or starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier),'//CH'))">
                          &lt;xsl:value-of select="concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier)">&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($if37))">&lt;/xsl:value-of>
                  &lt;/ns2:Id>
                  &lt;ns2:SchmeNm>
                    &lt;ns2:Cd>
                      &lt;xsl:variable name="if38">
                        &lt;xsl:choose>
                          &lt;xsl:when test="starts-with(concat($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57C,$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F57a/ns3:F57D/ns3:PartyIdentifier),'//CH')">
                            &lt;xsl:value-of select="'CUID'">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="$if38">&lt;/xsl:value-of>
                    &lt;/ns2:Cd>
                  &lt;/ns2:SchmeNm>
                &lt;/ns2:Othr>
              &lt;/ns2:Id>
            &lt;/ns2:CdtrAgtAcct>
            &lt;ns2:Cdtr>
              &lt;ns2:Nm>&lt;xsl:variable name="LineSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFLINE'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&#xd;
&#xd;
&lt;xsl:variable name="AppendedPostalAddress2">&#xd;
	&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:NumberNameAndAddressDetails">&#xd;
		&lt;xsl:value-of select="./ns3:Number"/>&#xd;
		&lt;xsl:value-of select="./ns3:Details"/>&#xd;
		&lt;xsl:value-of select="$LineSeparator"/>&#xd;
	&lt;/xsl:for-each>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:choose>		&#xd;
			 &#xd;
			 	 &lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:NameAndAddress/ns3:Line)">&#xd;
   &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:NameAndAddress/ns3:Line">&lt;/xsl:value-of>&#xd;
			 &lt;/xsl:when>	&#xd;
			 &#xd;
			 	 &lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:NumberNameAndAddressDetails)">&#xd;
   &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MXPartyNameAndStructuredAddress_Name(string($AppendedPostalAddress2), string($LineSeparator))">&lt;/xsl:value-of>&#xd;
			 &lt;/xsl:when>&#xd;
&lt;/xsl:choose>&lt;/ns2:Nm>
              &lt;ns2:PstlAdr>&lt;xsl:variable name="LineSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFLINE'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&#xd;
&#xd;
&lt;xsl:variable name="AppendedPostalAddress2">&#xd;
	&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:NumberNameAndAddressDetails">&#xd;
		&lt;xsl:value-of select="./ns3:Number"/>&#xd;
		&lt;xsl:value-of select="./ns3:Details"/>&#xd;
		&lt;xsl:value-of select="$LineSeparator"/>&#xd;
	&lt;/xsl:for-each>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:choose>		&#xd;
			 &#xd;
			 	 &lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:NameAndAddress/ns3:Line)">&#xd;
&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:NameAndAddress/ns3:Line">&#xd;
	&lt;xsl:if test="position()&amp;gt;('1')">&#xd;
		&lt;ns2:AdrLine>&#xd;
			&lt;xsl:value-of select="."/>&#xd;
		&lt;/ns2:AdrLine>&#xd;
	&lt;/xsl:if>&#xd;
&#xd;
	&lt;ns2:AdrLine>&#xd;
		&lt;xsl:variable name="if3">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:NameAndAddress/ns3:Line[2]))">&#xd;
					&lt;xsl:value-of select="'NOTPROVIDED'"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if3"/>&#xd;
	&lt;/ns2:AdrLine>&#xd;
&lt;/xsl:for-each>&#xd;
&lt;/xsl:when>&#xd;
&#xd;
&lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:NameAndAddress/ns3:Line)">&#xd;
&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:NameAndAddress/ns3:Line">&#xd;
	&lt;xsl:if test="position()&amp;gt;('1')">&#xd;
		&lt;ns2:AdrLine>&#xd;
			&lt;xsl:value-of select="."/>&#xd;
		&lt;/ns2:AdrLine>&#xd;
	&lt;/xsl:if>&#xd;
&#xd;
	&lt;ns2:AdrLine>&#xd;
		&lt;xsl:variable name="if39">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:NameAndAddress/ns3:Line[2]))">&#xd;
					&lt;xsl:value-of select="'NOTPROVIDED'"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if39"/>&#xd;
	&lt;/ns2:AdrLine>&#xd;
&lt;/xsl:for-each>&#xd;
&lt;/xsl:when>&#xd;
&lt;xsl:when test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:NumberNameAndAddressDetails)">&#xd;
&#xd;
&lt;xsl:variable name="ResultantPostalAddress">&#xd;
   &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MXPartyNameAndStructuredAddress_PostalAddress(string($AppendedPostalAddress2), string($LineSeparator))">&lt;/xsl:value-of>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&#xd;
&lt;xsl:call-template name="tokenize">&#xd;
	&lt;xsl:with-param name="text" select="$ResultantPostalAddress"/>&#xd;
	&lt;xsl:with-param name="separator" select="$LineSeparator"/>&#xd;
&lt;/xsl:call-template>&#xd;
&lt;/xsl:when>&#xd;
&lt;/xsl:choose>&lt;/ns2:PstlAdr>
              &lt;ns2:Id>
                &lt;ns2:OrgId>
                  &lt;ns2:AnyBIC>
                    &lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:IdentifierCode">&lt;/xsl:value-of>
                  &lt;/ns2:AnyBIC>
                  &lt;ns2:Othr>
                    &lt;ns2:Id>
                      &lt;xsl:variable name="if39">
                        &lt;xsl:choose>
                          &lt;xsl:when test="((boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59) and not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:Account))) or (boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A) and not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:Account))) or (boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F) and not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:Account))))">
                            &lt;xsl:value-of select="'NOTPROVIDED'">&lt;/xsl:value-of>
                          &lt;/xsl:when>
                        &lt;/xsl:choose>
                      &lt;/xsl:variable>
                      &lt;xsl:value-of select="$if39">&lt;/xsl:value-of>
                    &lt;/ns2:Id>
                  &lt;/ns2:Othr>
                &lt;/ns2:OrgId>
              &lt;/ns2:Id>&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F77a/ns3:F77B/ns3:Narrative/ns3:Line">
              &lt;ns2:CtryOfRes>&lt;xsl:variable name="if42">&#xd;
                    &lt;xsl:choose>&#xd;
                      &lt;xsl:when test="contains(.,'/BENEFRES/')">&#xd;
                        &lt;xsl:value-of select="substring-after(.,'/BENEFRES/')">&lt;/xsl:value-of>&#xd;
                      &lt;/xsl:when>&#xd;
                    &lt;/xsl:choose>&#xd;
                  &lt;/xsl:variable>&#xd;
                  &lt;xsl:value-of select="$if42">&lt;/xsl:value-of>&lt;/ns2:CtryOfRes>&lt;/xsl:for-each>&lt;/ns2:Cdtr>
            &lt;ns2:CdtrAcct>
              &lt;ns2:Id>
                &lt;ns2:Othr>
                  &lt;ns2:Id>&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59)">&#xd;
	&lt;xsl:variable name="if32">&#xd;
		&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:Account)">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:Account,'//CH')">&#xd;
					&lt;xsl:value-of select="substring($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:Account,'5')"/>&#xd;
				&lt;/xsl:when>&#xd;
				&lt;xsl:otherwise>&#xd;
					&lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:Account"/>&#xd;
				&lt;/xsl:otherwise>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:if>&#xd;
	&lt;/xsl:variable>&#xd;
	&lt;xsl:value-of select="$if32"/>&#xd;
&lt;/xsl:if>&#xd;
&#xd;
&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A)">&#xd;
	&lt;xsl:variable name="if34">&#xd;
		&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:Account)">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:Account,'//CH')">&#xd;
					&lt;xsl:value-of select="substring($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:Account,'5')"/>&#xd;
				&lt;/xsl:when>&#xd;
				&lt;xsl:otherwise>&#xd;
					&lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:Account"/>&#xd;
				&lt;/xsl:otherwise>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:if>&#xd;
	&lt;/xsl:variable>&#xd;
	&lt;xsl:value-of select="$if34"/>&#xd;
&lt;/xsl:if>&#xd;
&#xd;
&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F)">&#xd;
	&lt;xsl:variable name="if36">&#xd;
		&lt;xsl:if test="string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:Account)">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:Account,'//CH')">&#xd;
					&lt;xsl:value-of select="substring($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:Account,'5')"/>&#xd;
				&lt;/xsl:when>&#xd;
				&lt;xsl:otherwise>&#xd;
					&lt;xsl:value-of select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:Account"/>&#xd;
				&lt;/xsl:otherwise>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:if>&#xd;
	&lt;/xsl:variable>&#xd;
	&lt;xsl:value-of select="$if36"/>&#xd;
&lt;/xsl:if>&lt;/ns2:Id>
                  &lt;ns2:SchmeNm>
                    &lt;ns2:Cd>&lt;xsl:variable name="if33">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59/ns3:Account))">&#xd;
					&lt;xsl:value-of select="TXID"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if33"/>&#xd;
		&lt;xsl:variable name="if37">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59A/ns3:Account))">&#xd;
					&lt;xsl:value-of select="TXID"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if37"/>&#xd;
		&lt;xsl:variable name="if38">&#xd;
			&lt;xsl:choose>&#xd;
				&lt;xsl:when test="not(boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F59a/ns3:F59F/ns3:Account))">&#xd;
					&lt;xsl:value-of select="TXID"/>&#xd;
				&lt;/xsl:when>&#xd;
			&lt;/xsl:choose>&#xd;
		&lt;/xsl:variable>&#xd;
		&lt;xsl:value-of select="$if38"/>&lt;/ns2:Cd>
                  &lt;/ns2:SchmeNm>
                &lt;/ns2:Othr>
              &lt;/ns2:Id>
            &lt;/ns2:CdtrAcct>&lt;xsl:variable name="LineSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFLINE'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:variable name="VarSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFVAR'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:variable name="Appended23E">&#xd;
		&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F23a_2/ns3:F23E">&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="./ns3:InstructionCode"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="./ns3:AdditionalInformation"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="$LineSeparator"/>&#xd;
		&lt;/xsl:for-each>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:variable name="AppendedPostalAddress">&#xd;
		&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6">&#xd;
			&lt;xsl:value-of select="./ns3:Narrative1"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="./ns3:Code"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="./ns3:Narrative2"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="$LineSeparator"/>&#xd;
		&lt;/xsl:for-each>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:variable name="ResultantAddress">&#xd;
   &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MX_InstructionForCreditorAgent_103(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress),string($Appended23E), string($LineSeparator), string($VarSeparator))">&lt;/xsl:value-of>&#xd;
   &#xd;
 &lt;/xsl:variable>&#xd;
 &#xd;
 &lt;xsl:call-template name="tokenize4">&#xd;
&lt;xsl:with-param name="text" select="$ResultantAddress"/>&#xd;
&lt;/xsl:call-template>
            &lt;ns2:InstrForCdtrAgt>&lt;!-- User code starts here -->&lt;!-- User code starts here -->&lt;/ns2:InstrForCdtrAgt>
            &lt;ns2:InstrForNxtAgt>&lt;xsl:variable name="LineSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFLINE'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:variable name="VarSeparator">&#xd;
	&lt;xsl:value-of select="'ENDOFFVAR'"/>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:variable name="AppendedPostalAddress">&#xd;
		&lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6">&#xd;
			&lt;xsl:value-of select="./ns3:Narrative1"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="./ns3:Code"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="./ns3:Narrative2"/>&#xd;
			&lt;xsl:value-of select="$VarSeparator"/>&#xd;
			&lt;xsl:value-of select="$LineSeparator"/>&#xd;
		&lt;/xsl:for-each>&#xd;
&lt;/xsl:variable>&#xd;
&#xd;
&lt;xsl:variable name="ResultantAddress">&#xd;
   &lt;xsl:value-of select="MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MX_InstructionForNextAgent_202COV(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))">&lt;/xsl:value-of>&#xd;
   &#xd;
 &lt;/xsl:variable>&#xd;
 &#xd;
 &lt;xsl:call-template name="tokenize2">&#xd;
&lt;xsl:with-param name="text" select="$ResultantAddress"/>&#xd;
&lt;xsl:with-param name="separator" select="$LineSeparator"/>&#xd;
&lt;/xsl:call-template>
              &lt;ns2:InstrInf>&lt;!-- User code starts here -->&lt;/ns2:InstrInf>
            &lt;/ns2:InstrForNxtAgt>
            &lt;ns2:Purp>
              &lt;ns2:Prtry>
                &lt;xsl:variable name="if40">
                  &lt;xsl:choose>
                    &lt;xsl:when test="boolean($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F26a/ns3:F26T)">
                      &lt;xsl:value-of select="concat(':26T:',$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F26a/ns3:F26T)">&lt;/xsl:value-of>
                    &lt;/xsl:when>
                  &lt;/xsl:choose>
                &lt;/xsl:variable>
                &lt;xsl:value-of select="$if40">&lt;/xsl:value-of>
              &lt;/ns2:Prtry>
            &lt;/ns2:Purp>
            &lt;ns2:RgltryRptg>
              &lt;ns2:Dtls>
                &lt;xsl:for-each select="$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F77a/ns3:F77B/ns3:Narrative/ns3:Line">
                  &lt;ns2:Inf>
                    &lt;xsl:value-of select=".">&lt;/xsl:value-of>
                  &lt;/ns2:Inf>
                &lt;/xsl:for-each>
              &lt;/ns2:Dtls>
            &lt;/ns2:RgltryRptg>
            &lt;ns2:RmtInf>
              &lt;ns2:Ustrd>
                &lt;xsl:value-of select="MTtoMXUtil:com.fiorano.funclet.MTtoMXUtil.MT_To_MXRemittanceInformation(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F70a/ns3:F70/ns3:Narrative/ns3:Line[1]),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F70a/ns3:F70/ns3:Narrative/ns3:Line[2]),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F70a/ns3:F70/ns3:Narrative/ns3:Line[3]),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT103/ns3:F70a/ns3:F70/ns3:Narrative/ns3:Line[4]))">&lt;/xsl:value-of>
              &lt;/ns2:Ustrd>
            &lt;/ns2:RmtInf>
          &lt;/ns2:CdtTrfTxInf>
        &lt;/ns2:FIToFICstmrCdtTrf>
      &lt;/ns2:Document>
    &lt;/ns4:Envelope>
  &lt;/xsl:template>&lt;xsl:template name="tokenize">&#xd;
 &lt;xsl:param name="text" select="."/>&#xd;
 &lt;xsl:param name="separator" select="'ENDOFFLINE'"/>&#xd;
        &lt;xsl:choose>&#xd;
		&lt;xsl:when test="not(string-length($text))">&#xd;
		&lt;/xsl:when>&#xd;
            &lt;xsl:when test="(not(contains($text, $separator))) ">&#xd;
                &lt;ns2:AdrLine>&#xd;
                    &lt;xsl:value-of select="normalize-space($text)"/>&#xd;
                &lt;/ns2:AdrLine>&#xd;
				&#xd;
            &lt;/xsl:when>&#xd;
            &lt;xsl:when test="((contains($text, $separator))) ">&#xd;
               &lt;ns2:AdrLine>&#xd;
                    &lt;xsl:value-of select="normalize-space(substring-before($text, $separator))"/>&#xd;
               &lt;/ns2:AdrLine>&#xd;
                &lt;xsl:call-template name="tokenize">&#xd;
                    &lt;xsl:with-param name="text" select="substring-after($text, $separator)"/>&#xd;
                &lt;/xsl:call-template>&#xd;
            &lt;/xsl:when>&#xd;
        &lt;/xsl:choose>&#xd;
&lt;/xsl:template>&#xd;
&#xd;
&lt;xsl:template name="tokenize2">&#xd;
 &lt;xsl:param name="text" select="."/>&#xd;
 &lt;xsl:param name="separator" select="'ENDOFFLINE'"/>&#xd;
        &lt;xsl:choose>&#xd;
		&lt;xsl:when test="not(string-length($text))">&#xd;
		&lt;/xsl:when>&#xd;
            &lt;xsl:when test="(not(contains($text, $separator))) ">&#xd;
                &lt;ns2:InstrInf>&#xd;
                    &lt;xsl:value-of select="normalize-space($text)"/>&#xd;
                &lt;/ns2:InstrInf>&#xd;
				&#xd;
            &lt;/xsl:when>&#xd;
            &lt;xsl:when test="((contains($text, $separator))) ">&#xd;
               &lt;ns2:InstrInf>&#xd;
                    &lt;xsl:value-of select="normalize-space(substring-before($text, $separator))"/>&#xd;
               &lt;/ns2:InstrInf>&#xd;
                &lt;xsl:call-template name="tokenize2">&#xd;
                    &lt;xsl:with-param name="text" select="substring-after($text, $separator)"/>&#xd;
                &lt;/xsl:call-template>&#xd;
            &lt;/xsl:when>&#xd;
        &lt;/xsl:choose>&#xd;
&lt;/xsl:template>&#xd;
&#xd;
&#xd;
&#xd;
 &lt;xsl:template name="tokenize4">&#xd;
 &lt;xsl:param name="text" select="."/>&#xd;
 &lt;xsl:param name="LineSeparator" select="'ENDOFFLINE'"/>&#xd;
 &lt;xsl:param name="VarSeparator" select="'ENDOFFVAR'"/>&#xd;
        &lt;xsl:choose>&#xd;
		&lt;xsl:when test="not(string-length($text))">&#xd;
		&lt;/xsl:when>&#xd;
            &lt;xsl:when test="not(contains($text, $LineSeparator))">&#xd;
			&lt;ns2:InstrForCdtrAgt>&#xd;
				&lt;ns2:Cd>&#xd;
				&lt;xsl:value-of select="normalize-space(substring-before($text, $VarSeparator))"/>&#xd;
				&lt;/ns2:Cd>&#xd;
				&#xd;
				&lt;xsl:variable name="Cdval">&#xd;
				&lt;xsl:value-of select="substring-after($text, $VarSeparator)"/>&#xd;
				&lt;/xsl:variable>&#xd;
				&#xd;
				&lt;ns2:InstrInf>&#xd;
				&lt;xsl:value-of select="normalize-space(substring-before($Cdval, $VarSeparator))"/>&#xd;
				&lt;/ns2:InstrInf>&#xd;
&#xd;
                &lt;/ns2:InstrForCdtrAgt>&#xd;
            &lt;/xsl:when>&#xd;
           &lt;xsl:when test="((contains($text, $LineSeparator))) ">&#xd;
              &#xd;
			  &lt;ns2:InstrForCdtrAgt>&#xd;
				&lt;ns2:Cd>&#xd;
				&lt;xsl:value-of select="normalize-space(substring-before($text, $VarSeparator))"/>&#xd;
				&lt;/ns2:Cd>&#xd;
				&#xd;
				&lt;xsl:variable name="Cdval1">&#xd;
				&lt;xsl:value-of select="substring-after($text, $VarSeparator)"/>&#xd;
				&lt;/xsl:variable>&#xd;
				&#xd;
				&lt;ns2:InstrInf>&#xd;
				&lt;xsl:value-of select="normalize-space(substring-before($Cdval1, $VarSeparator))"/>&#xd;
				&lt;/ns2:InstrInf>&#xd;
&#xd;
				&lt;/ns2:InstrForCdtrAgt>&#xd;
                &lt;xsl:call-template name="tokenize4">&#xd;
                    &lt;xsl:with-param name="text" select="substring-after($text, $LineSeparator)"/>&#xd;
                &lt;/xsl:call-template>&#xd;
            &lt;/xsl:when>&#xd;
        &lt;/xsl:choose>&#xd;
&lt;/xsl:template>
&lt;!--The list of parameters defined by user-->
  &lt;xsl:param name="_TIF_MESSAGE_">&lt;/xsl:param>
&lt;!--The list of Extensions defined by user-->
  &lt;lxslt:component prefix="dateConversion" functions="convertDate">
    &lt;lxslt:script lang="javascript">&lt;![CDATA[// ===================================================================
// You may *NOT* re-distribute this code in any way except through its
// use. That means, you can include it in your product, or your web
// site, or any other form where the code is actually being used. You
// may not put the plain javascript up on your site for download or
// include it in your javascript libraries for download. 
// If you wish to share this code with others, please just point them
// to the URL instead.
// Please DO NOT link directly to my .js files from your site. Copy
// the files to your server and use them there. Thank you.
// ===================================================================

// HISTORY
// ------------------------------------------------------------------
// March 11, 2003: Added parseDate() function
// March 11, 2003: Added "NNN" formatting option. Doesn't match up
//                 perfectly with SimpleDateFormat formats, but 
//                 backwards-compatability was required.

// ------------------------------------------------------------------
// These functions use the same 'format' strings as the 
// java.text.SimpleDateFormat class, with minor exceptions.
// The format string consists of the following abbreviations:
// 
// Field        | Full Form          | Short Form
// -------------+--------------------+-----------------------
// Year         | yyyy (4 digits)    | yy (2 digits), y (2 or 4 digits)
// Month        | MMM (name or abbr.)| MM (2 digits), M (1 or 2 digits)
//              | NNN (abbr.)        |
// Day of Month | dd (2 digits)      | d (1 or 2 digits)
// Day of Week  | EE (name)          | E (abbr)
// Hour (1-12)  | hh (2 digits)      | h (1 or 2 digits)
// Hour (0-23)  | HH (2 digits)      | H (1 or 2 digits)
// Hour (0-11)  | KK (2 digits)      | K (1 or 2 digits)
// Hour (1-24)  | kk (2 digits)      | k (1 or 2 digits)
// Minute       | mm (2 digits)      | m (1 or 2 digits)
// Second       | ss (2 digits)      | s (1 or 2 digits)
// AM/PM        | a                  |
//
// NOTE THE DIFFERENCE BETWEEN MM and mm! Month=MM, not mm!
// Examples:
//  "MMM d, y" matches: January 01, 2000
//                      Dec 1, 1900
//                      Nov 20, 00
//  "M/d/yy"   matches: 01/20/00
//                      9/2/00
//  "MMM dd, yyyy hh:mm:ssa" matches: "January 01, 2000 12:30:45AM"
// ------------------------------------------------------------------

var MONTH_NAMES=new Array('January','February','March','April','May','June','July','August','September','October','November','December','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
var DAY_NAMES=new Array('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sun','Mon','Tue','Wed','Thu','Fri','Sat');
function LZ(x) {return(x&lt;0||x>9?"":"0")+x}

function convertDate(dateString, inFormat, outFormat)
{
	return formatDate(getDateFromFormat(dateString,inFormat),outFormat);
}

// ------------------------------------------------------------------
// isDate ( date_string, format_string )
// Returns true if date string matches format of format string and
// is a valid date. Else returns false.
// It is recommended that you trim whitespace around the value before
// passing it to this function, as whitespace is NOT ignored!
// ------------------------------------------------------------------
function isDate(val,format) {
	var date=getDateFromFormat(val,format);
	if (date==0) { return false; }
	return true;
	}

// -------------------------------------------------------------------
// compareDates(date1,date1format,date2,date2format)
//   Compare two date strings to see which is greater.
//   Returns:
//   1 if date1 is greater than date2
//   0 if date2 is greater than date1 of if they are the same
//  -1 if either of the dates is in an invalid format
// -------------------------------------------------------------------
function compareDates(date1,dateformat1,date2,dateformat2) {
	var d1=getDateFromFormat(date1,dateformat1);
	var d2=getDateFromFormat(date2,dateformat2);
	if (d1==0 || d2==0) {
		return -1;
		}
	else if (d1 > d2) {
		return 1;
		}
	return 0;
	}

// ------------------------------------------------------------------
// formatDate (date_object, format)
// Returns a date in the output format specified.
// The format string uses the same abbreviations as in getDateFromFormat()
// ------------------------------------------------------------------
function formatDate(date,format) {
	format=format+"";
	var result="";
	var i_format=0;
	var c="";
	var token="";
	var y=date.getYear()+"";
	var M=date.getMonth()+1;
	var d=date.getDate();
	var E=date.getDay();
	var H=date.getHours();
	var m=date.getMinutes();
	var s=date.getSeconds();
	var yyyy,yy,MMM,MM,dd,hh,h,mm,ss,ampm,HH,H,KK,K,kk,k;
	// Convert real date parts into formatted versions
	var value=new Object();
	if (y.length &lt; 4) {y=""+(y-0+1900);}
	value["y"]=""+y;
	value["yyyy"]=y;
	value["yy"]=y.substring(2,4);
	value["M"]=M;
	value["MM"]=LZ(M);
	value["MMM"]=MONTH_NAMES[M-1];
	value["NNN"]=MONTH_NAMES[M+11];
	value["d"]=d;
	value["dd"]=LZ(d);
	value["E"]=DAY_NAMES[E+7];
	value["EE"]=DAY_NAMES[E];
	value["H"]=H;
	value["HH"]=LZ(H);
	if (H==0){value["h"]=12;}
	else if (H>12){value["h"]=H-12;}
	else {value["h"]=H;}
	value["hh"]=LZ(value["h"]);
	if (H>11){value["K"]=H-12;} else {value["K"]=H;}
	value["k"]=H+1;
	value["KK"]=LZ(value["K"]);
	value["kk"]=LZ(value["k"]);
	if (H > 11) { value["a"]="PM"; }
	else { value["a"]="AM"; }
	value["m"]=m;
	value["mm"]=LZ(m);
	value["s"]=s;
	value["ss"]=LZ(s);
	while (i_format &lt; format.length) {
		c=format.charAt(i_format);
		token="";
		while ((format.charAt(i_format)==c) &amp;&amp; (i_format &lt; format.length)) {
			token += format.charAt(i_format++);
			}
		if (value[token] != null) { result=result + value[token]; }
		else { result=result + token; }
		}
	return result;
	}
	
// ------------------------------------------------------------------
// Utility functions for parsing in getDateFromFormat()
// ------------------------------------------------------------------
function _isInteger(val) {
	var digits="1234567890";
	for (var i=0; i &lt; val.length; i++) {
		if (digits.indexOf(val.charAt(i))==-1) { return false; }
		}
	return true;
	}
function _getInt(str,i,minlength,maxlength) {
	for (var x=maxlength; x>=minlength; x--) {
		var token=str.substring(i,i+x);
		if (token.length &lt; minlength) { return null; }
		if (_isInteger(token)) { return token; }
		}
	return null;
	}
	
// ------------------------------------------------------------------
// getDateFromFormat( date_string , format_string )
//
// This function takes a date string and a format string. It matches
// If the date string matches the format string, it returns the 
// getTime() of the date. If it does not match, it returns 0.
// ------------------------------------------------------------------
function getDateFromFormat(val,format) {
	val=val+"";
	format=format+"";
	var i_val=0;
	var i_format=0;
	var c="";
	var token="";
	var token2="";
	var x,y;
	var now=new Date();
	var year=now.getYear();
	var month=now.getMonth()+1;
	var date=1;
	var hh=now.getHours();
	var mm=now.getMinutes();
	var ss=now.getSeconds();
	var ampm="";
	
	while (i_format &lt; format.length) {
		// Get next token from format string
		c=format.charAt(i_format);
		token="";
		while ((format.charAt(i_format)==c) &amp;&amp; (i_format &lt; format.length)) {
			token += format.charAt(i_format++);
			}
		// Extract contents of value based on format token
		if (token=="yyyy" || token=="yy" || token=="y") {
			if (token=="yyyy") { x=4;y=4; }
			if (token=="yy")   { x=2;y=2; }
			if (token=="y")    { x=2;y=4; }
			year=_getInt(val,i_val,x,y);
			if (year==null) { return 0; }
			i_val += year.length;
			if (year.length==2) {
				if (year > 70) { year=1900+(year-0); }
				else { year=2000+(year-0); }
				}
			}
		else if (token=="MMM"||token=="NNN"){
			month=0;
			for (var i=0; i&lt;MONTH_NAMES.length; i++) {
				var month_name=MONTH_NAMES[i];
				if (val.substring(i_val,i_val+month_name.length).toLowerCase()==month_name.toLowerCase()) {
					if (token=="MMM"||(token=="NNN"&amp;&amp;i>11)) {
						month=i+1;
						if (month>12) { month -= 12; }
						i_val += month_name.length;
						break;
						}
					}
				}
			if ((month &lt; 1)||(month>12)){return 0;}
			}
		else if (token=="EE"||token=="E"){
			for (var i=0; i&lt;DAY_NAMES.length; i++) {
				var day_name=DAY_NAMES[i];
				if (val.substring(i_val,i_val+day_name.length).toLowerCase()==day_name.toLowerCase()) {
					i_val += day_name.length;
					break;
					}
				}
			}
		else if (token=="MM"||token=="M") {
			month=_getInt(val,i_val,token.length,2);
			if(month==null||(month&lt;1)||(month>12)){return 0;}
			i_val+=month.length;}
		else if (token=="dd"||token=="d") {
			date=_getInt(val,i_val,token.length,2);
			if(date==null||(date&lt;1)||(date>31)){return 0;}
			i_val+=date.length;}
		else if (token=="hh"||token=="h") {
			hh=_getInt(val,i_val,token.length,2);
			if(hh==null||(hh&lt;1)||(hh>12)){return 0;}
			i_val+=hh.length;}
		else if (token=="HH"||token=="H") {
			hh=_getInt(val,i_val,token.length,2);
			if(hh==null||(hh&lt;0)||(hh>23)){return 0;}
			i_val+=hh.length;}
		else if (token=="KK"||token=="K") {
			hh=_getInt(val,i_val,token.length,2);
			if(hh==null||(hh&lt;0)||(hh>11)){return 0;}
			i_val+=hh.length;}
		else if (token=="kk"||token=="k") {
			hh=_getInt(val,i_val,token.length,2);
			if(hh==null||(hh&lt;1)||(hh>24)){return 0;}
			i_val+=hh.length;hh--;}
		else if (token=="mm"||token=="m") {
			mm=_getInt(val,i_val,token.length,2);
			if(mm==null||(mm&lt;0)||(mm>59)){return 0;}
			i_val+=mm.length;}
		else if (token=="ss"||token=="s") {
			ss=_getInt(val,i_val,token.length,2);
			if(ss==null||(ss&lt;0)||(ss>59)){return 0;}
			i_val+=ss.length;}
		else if (token=="a") {
			if (val.substring(i_val,i_val+2).toLowerCase()=="am") {ampm="AM";}
			else if (val.substring(i_val,i_val+2).toLowerCase()=="pm") {ampm="PM";}
			else {return 0;}
			i_val+=2;}
		else {
			if (val.substring(i_val,i_val+token.length)!=token) {return 0;}
			else {i_val+=token.length;}
			}
		}
	// If there are any trailing characters left in the value, it doesn't match
	if (i_val != val.length) { return 0; }
	// Is date valid for month?
	if (month==2) {
		// Check for leap year
		if ( ( (year%4==0)&amp;&amp;(year%100 != 0) ) || (year%400==0) ) { // leap year
			if (date > 29){ return 0; }
			}
		else { if (date > 28) { return 0; } }
		}
	if ((month==4)||(month==6)||(month==9)||(month==11)) {
		if (date > 30) { return 0; }
		}
	// Correct hours value
	if (hh&lt;12 &amp;&amp; ampm=="PM") { hh=hh-0+12; }
	else if (hh>11 &amp;&amp; ampm=="AM") { hh-=12; }
	var newdate=new Date(year,month-1,date,hh,mm,ss);
	return newdate;
	}

// ------------------------------------------------------------------
// parseDate( date_string [, prefer_euro_format] )
//
// This function takes a date string and tries to match it to a
// number of possible date formats to get the value. It will try to
// match against the following international formats, in this order:
// y-M-d   MMM d, y   MMM d,y   y-MMM-d   d-MMM-y  MMM d
// M/d/y   M-d-y      M.d.y     MMM-d     M/d      M-d
// d/M/y   d-M-y      d.M.y     d-MMM     d/M      d-M
// A second argument may be passed to instruct the method to search
// for formats like d/M/y (european format) before M/d/y (American).
// Returns a Date object or null if no patterns match.
// ------------------------------------------------------------------
function parseDate(val) {
	var preferEuro=(arguments.length==2)?arguments[1]:false;
	generalFormats=new Array('y-M-d','MMM d, y','MMM d,y','y-MMM-d','d-MMM-y','MMM d');
	monthFirst=new Array('M/d/y','M-d-y','M.d.y','MMM-d','M/d','M-d');
	dateFirst =new Array('d/M/y','d-M-y','d.M.y','d-MMM','d/M','d-M');
	var checkList=new Array('generalFormats',preferEuro?'dateFirst':'monthFirst',preferEuro?'monthFirst':'dateFirst');
	var d=null;
	for (var i=0; i&lt;checkList.length; i++) {
		var l=window[checkList[i]];
		for (var j=0; j&lt;l.length; j++) {
			d=getDateFromFormat(val,l[j]);
			if (d>0) { return new Date(d); }
			}
		}
	return null;
}]]&gt;&lt;/lxslt:script>
  &lt;/lxslt:component>
&lt;/xsl:stylesheet></resource-property><resource-property name="Transformation Class Name"></resource-property><resource-property name="XSLT Engine">Xalan</resource-property></resource-properties><deployment nodes="fes" /><execution><debug enabled="false" port="5000" suspend="false" /><launchOrder-Sequence sequence="-1" /><stopOrder-Sequence sequence="-1" /></execution><inputport-instances><inputport-instance name="IN_PORT"><description>Transforms input XML based on Mappings defined and generates an output XML.</description><schema root="{urn:swift:xsd:mtmsg.2020}FinMessage"><file>SwiftTranslator.IN_PORT.xsd</file><schemarefs><schemaref uri="urn:swift:xsd:fin.103.2020"><file>SwiftTranslator.IN_PORT.1.xsd</file></schemaref></schemarefs></schema><selectors /><sbwmask /><jms><destination /><subscriber><transaction enabled="false" /><subscription durable="false" /></subscriber></jms><workflow type="0" datatype="2" enablecallout="false" /></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><description>Transforms input XML based on Mappings defined and generates an output XML.</description><schema root="{urn:swift:xsd:envelope}Envelope"><file>SwiftTranslator.OUT_PORT.xsd</file><schemarefs><schemaref uri="urn:iso:std:iso:20022:tech:xsd:head.001.001.02"><file>SwiftTranslator.OUT_PORT.2.xsd</file></schemaref><schemaref uri="urn:iso:std:iso:20022:tech:xsd:pacs.008.001.08"><file>SwiftTranslator.OUT_PORT.3.xsd</file></schemaref></schemarefs></schema><selectors /><sbwmask /><jms><destination type="0" custom="true" name="MT103_To_PACS008Responsecustom" /><publisher><messages persistent="true" /></publisher></jms><workflow type="0" datatype="2" enablecallout="false" /><transformation><transformation-config-name name="mt103appcontext" /></transformation></outputport-instance><outputport-instance name="ON_EXCEPTION"><description>Used as an Exception Port</description><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><file>SwiftTranslator.ON_EXCEPTION.xsd</file></schema><selectors /><sbwmask /><jms><destination /><publisher><messages persistent="true" /></publisher></jms><workflow type="1" datatype="2" enablecallout="false" /></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">1000000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM/dd/yyyy HH:mm:ss</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="ERR_HANDLER" level="ALL" uniqueNameRequired="true" /><logmodule name="OUT_HANDLER" level="ALL" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.xslt.xslt" level="ALL" uniqueNameRequired="true" /></logmodules><runtime-arguments-config-name name="64m" /><servicerefs /></inst><inst name="Feeder1"><service guid="Feeder" version="4.0" /><short-description>The Feeder service is used to feed in data.</short-description><long-description>The Feeder service is used to feed data to any service to which its output port is linked. The service defines no input or output format for the messages. It can take any data as input and just sends it forward. The user can input data in the window which pops up on launching the service.</long-description><deployment nodes="fes" /><execution><debug enabled="false" port="5000" suspend="false" /><launchOrder-Sequence sequence="-1" /><stopOrder-Sequence sequence="-1" /></execution><inputport-instances /><outputport-instances><outputport-instance name="OUT_PORT"><description>Gives data or messages as output</description><selectors /><sbwmask /><jms><destination /><publisher><messages persistent="true" /></publisher></jms><workflow type="0" datatype="2" enablecallout="false" /></outputport-instance><outputport-instance name="ON_EXCEPTION"><description>Used as an Exception Port</description><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><file>Feeder1.ON_EXCEPTION.xsd</file></schema><selectors /><sbwmask /><jms><destination /><publisher><messages persistent="true" /></publisher></jms><workflow type="1" datatype="2" enablecallout="false" /></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">1000000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM/dd/yyyy HH:mm:ss</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.services.feeder.FeederService" level="WARNING" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.feeder.transport.jms" level="WARNING" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.feeder.engine" level="WARNING" uniqueNameRequired="true" /><logmodule name="ERR_HANDLER" uniqueNameRequired="true" /><logmodule name="OUT_HANDLER" level="INFO" uniqueNameRequired="true" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value> -client -DLOG_TO_STREAM=true -Xrs -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m</value></runtime-argument><runtime-argument name="JAVA_HOME" mandatory="false" inmemory="false" /></runtime-arguments><servicerefs /></inst><inst name="Display1"><service guid="Display" version="4.0" /><short-description>Component for Displaying documents</short-description><deployment nodes="fes" /><execution><debug enabled="false" port="5000" suspend="false" /><launchOrder-Sequence sequence="-1" /><stopOrder-Sequence sequence="-1" /></execution><inputport-instances><inputport-instance name="IN_PORT"><description>Receives all incoming messages to display them in a user friendly format</description><selectors /><sbwmask /><jms><destination /><subscriber><transaction enabled="false" /><subscription durable="false" /></subscriber></jms><workflow type="0" datatype="2" enablecallout="false" /></inputport-instance></inputport-instances><outputport-instances><outputport-instance name="OUT_PORT"><description>Sends the document received at input port to the next business component in the workflow</description><selectors /><sbwmask /><jms><destination /><publisher><messages persistent="true" /></publisher></jms><workflow type="0" datatype="2" enablecallout="false" /></outputport-instance><outputport-instance name="ON_EXCEPTION"><description>Used as an Exception Port</description><schema root="{http://www.fiorano.com/fesb/activity/fault}Error"><file>Display1.ON_EXCEPTION.xsd</file></schema><selectors /><sbwmask /><jms><destination /><publisher><messages persistent="true" /></publisher></jms><workflow type="1" datatype="2" enablecallout="false" /></outputport-instance></outputport-instances><logmanager logger="java.util.logging.FileHandler"><Param name="java.util.logging.FileHandler.limit">1000000</Param><Param name="java.util.logging.FileHandler.dir">logs</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.dateformat">MM/dd/yyyy HH:mm:ss</Param><Param name="java.util.logging.FileHandler.count">4</Param><Param name="fiorano.jms.log2.def.DefaultFormatter.includetimestamp">true</Param></logmanager><logmodules><logmodule name="com.fiorano.services.display.DisplayService" level="WARNING" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.display.transport.jms" level="WARNING" uniqueNameRequired="true" /><logmodule name="com.fiorano.services.display.engine" level="WARNING" uniqueNameRequired="true" /><logmodule name="ERR_HANDLER" uniqueNameRequired="true" /><logmodule name="OUT_HANDLER" level="INFO" uniqueNameRequired="true" /></logmodules><runtime-arguments><runtime-argument name="JVM_PARAMS" mandatory="false" inmemory="false"><value> -client -DLOG_TO_STREAM=true -Xrs -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m</value></runtime-argument><runtime-argument name="JAVA_HOME" mandatory="false" inmemory="false" /></runtime-arguments><servicerefs /></inst></service-instances><routes><route name="route1"><source inst="MTtoXML" port="OUT_PORT" /><target inst="SwiftTranslator" port="IN_PORT" /><messages durabilitySource="Application" /><logmodules /></route><route name="route2"><source inst="Feeder1" port="OUT_PORT" /><target inst="MTtoXML" port="IN_PORT" /><messages durabilitySource="Application" /><logmodules /></route><route name="route3"><source inst="SwiftTranslator" port="OUT_PORT" /><target inst="Display1" port="IN_PORT" /><messages durabilitySource="Application" /><logmodules /></route></routes></application>