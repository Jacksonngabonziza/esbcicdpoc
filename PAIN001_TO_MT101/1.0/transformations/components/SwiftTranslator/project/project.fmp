<?xml version="1.0" encoding="UTF-8"?>
<mappermodel:MapperProject xmlns:mappermodel="http://www.fiorano.com/tools/mapper/mappermodel" convertor="nameIndexed" version="3.0.2">
  <mappermodel:Comments>Key in relevant comments</mappermodel:Comments>
  <mappermodel:InputStructure>
    <mappermodel:Structure duplicates="" filePath="Application-Context.DTD" mime="DTD" name="Application-Context" rootName="Context"/>
    <mappermodel:Structure duplicates="" filePath="Input1.XSD" mime="XSD" name="Input1" rootName="Envelope">
      <mappermodel:ExternalStructure filePath="head.001.001.02.xsd" name="urn:iso:std:iso:20022:tech:xsd:head.001.001.02"/>
      <mappermodel:ExternalStructure filePath="pain.001.001.09.xsd" name="urn:iso:std:iso:20022:tech:xsd:pain.001.001.09"/>
    </mappermodel:Structure>
  </mappermodel:InputStructure>
  <mappermodel:OutputStructure>
    <mappermodel:Structure duplicates="" filePath="OUT_PORT.XSD" mime="XSD" name="OUT_PORT" rootName="{urn:swift:xsd:mtmsg.2020}FinMessage">
      <mappermodel:ExternalStructure filePath="OUT_PORT_ext.XSD" mime="XSD" name="urn:swift:xsd:fin.101.2020"/>
    </mappermodel:Structure>
  </mappermodel:OutputStructure>
  <mappermodel:Mappings>
    <mappermodel:GraphModel inputPins="1,2" outputNode="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,SeqA:0,F20a:0,[Choice]:0,F20:0" x="949" y="34">
      <mappermodel:FunctionGraphNode label="Contains" type="48" x="299" y="63">
        <mappermodel:InputPins>str,searchStr</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="Variable:MT20" type="160" x="47" y="62">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="ENDOFOUTPUT" type="22" x="81" y="137">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="689" y="61">
        <mappermodel:InputPins>bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="SubString-Before" type="23" x="422" y="129">
        <mappermodel:InputPins>str,before</mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="1" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="1" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="5" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="5" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="1" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="3" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="4" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,SeqA:0,F28a:0,[Choice]:0,F28D:0,MessageIndex:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="1" type="22" x="110" y="74">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,SeqA:0,F28a:0,[Choice]:0,F28D:0,Total:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="1" type="22" x="208" y="85">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2,3" outputNode="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,SeqA:0,F30a:0,[Choice]:0,F30:0" x="672" y="46">
      <mappermodel:TreeGraphNode inputNode="Input1:0,Envelope:0,Document:0,CstmrCdtTrfInitn:0,[ONE MANY]:0,PmtInf:0,ReqdExctnDt:0,[Choice]:0,Dt:0" x="147" y="40">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="MXToMT:com.fiorano.funclet.MXtoMT.MX_To_MTDate(java.lang.String arg1)" type="69" x="317" y="129">
        <mappermodel:InputPins>arg1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="2" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F32a:0,[Choice]:0,F32B:0,Currency:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="Input1:0,Envelope:0,Document:0,CstmrCdtTrfInitn:0,[ONE MANY]:0,PmtInf:0,[ONE MANY]:0,CdtTrfTxInf:0,Amt:0,[Choice]:0,InstdAmt:0,Ccy:0" x="-1" y="-1">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
  </mappermodel:Mappings>
  <mappermodel:Extensions>
    <mappermodel:Extension language="java" name="MXToMT">
      <mappermodel:Script>com.fiorano.funclet.MXtoMT</mappermodel:Script>
      <mappermodel:Function name="public static java.lang.String com.fiorano.funclet.MXtoMT.MX_To_MTDate(java.lang.String)">
        <mappermodel:Argument datatype="java.lang.String" name="arg1"/>
      </mappermodel:Function>
    </mappermodel:Extension>
  </mappermodel:Extensions>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block1:0">&lt;ns4:ApplicationIdentifier>
          &lt;xsl:value-of select=&quot;'F'&quot;>&lt;/xsl:value-of>
        &lt;/ns4:ApplicationIdentifier>
        &lt;ns4:ServiceIdentifier>
          &lt;xsl:value-of select=&quot;'01'&quot;>&lt;/xsl:value-of>
        &lt;/ns4:ServiceIdentifier>
        &lt;ns4:LogicalTerminalAddress>
          &lt;xsl:variable name=&quot;if0&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                &lt;xsl:value-of select=&quot;$document_Input1/Envelope/ns3:AppHdr/ns3:To/ns3:FIId/ns3:FinInstnId/ns3:BICFI&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
              &lt;xsl:otherwise>
                &lt;xsl:value-of select=&quot;$document_Input1/Envelope/ns3:AppHdr/ns3:Fr/ns3:FIId/ns3:FinInstnId/ns3:BICFI&quot;>&lt;/xsl:value-of>
              &lt;/xsl:otherwise>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.MX_To_MT_BICFI_LogicalAddress(string($if0))&quot;>&lt;/xsl:value-of>
        &lt;/ns4:LogicalTerminalAddress>
 &lt;ns4:SessionNumber>
	&lt;xsl:value-of select=&quot;substring(java:_getStringProperty($_TIF_MESSAGE_, 'SequenceNumber'),'1','4')&quot;/>
&lt;/ns4:SessionNumber>
&lt;ns4:SequenceNumber>
	&lt;xsl:value-of select=&quot;substring(java:_getStringProperty($_TIF_MESSAGE_, 'SequenceNumber'),'5','6')&quot;/>
&lt;/ns4:SequenceNumber></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block2:0">&lt;!-- &lt;ns4:InputIdentifier>
          &lt;xsl:variable name=&quot;if1&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))=('I')&quot;>
                &lt;xsl:value-of select=&quot;'I'&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if1&quot;>&lt;/xsl:value-of>
        &lt;/ns4:InputIdentifier>
        &lt;ns4:MessageType>
          &lt;xsl:variable name=&quot;if2&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))=('I')&quot;>
                &lt;xsl:value-of select=&quot;'101'&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if2&quot;>&lt;/xsl:value-of>
        &lt;/ns4:MessageType>
        &lt;ns4:DestinationAddress>
          &lt;xsl:variable name=&quot;if3&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))=('I')&quot;>
                &lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.MX_To_MT_BICFI_LogicalAddress(string($document_Input1/Envelope/ns3:AppHdr/ns3:To/ns3:FIId/ns3:FinInstnId/ns3:BICFI))&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if3&quot;>&lt;/xsl:value-of>
        &lt;/ns4:DestinationAddress>
        &lt;ns4:MessagePriority>
          &lt;xsl:variable name=&quot;if4&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))=('I')&quot;>
                &lt;xsl:variable name=&quot;if5&quot;>
                  &lt;xsl:choose>
                    &lt;xsl:when test=&quot;($document_Input1/Envelope/ns3:AppHdr/ns3:Prty)=('HIGH')&quot;>
                      &lt;xsl:value-of select=&quot;'U'&quot;>&lt;/xsl:value-of>
                    &lt;/xsl:when>
                    &lt;xsl:otherwise>
                      &lt;xsl:value-of select=&quot;'N'&quot;>&lt;/xsl:value-of>
                    &lt;/xsl:otherwise>
                  &lt;/xsl:choose>
                &lt;/xsl:variable>
                &lt;xsl:value-of select=&quot;$if5&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if4&quot;>&lt;/xsl:value-of>
        &lt;/ns4:MessagePriority>
        -->&lt;ns4:OutputIdentifier>
          &lt;xsl:variable name=&quot;if6&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                &lt;xsl:value-of select=&quot;'O'&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if6&quot;>&lt;/xsl:value-of>
        &lt;/ns4:OutputIdentifier>
        &lt;ns4:MessageType>
          &lt;xsl:variable name=&quot;if7&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                &lt;xsl:value-of select=&quot;'101'&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if7&quot;>&lt;/xsl:value-of>
        &lt;/ns4:MessageType>
        &lt;ns4:InputTime>
          &lt;xsl:variable name=&quot;if8&quot;>
             &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputTime'))&quot;>
                  &lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'OutputTime')&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
				
				 &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and (not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputTime'))))&quot;>
                   &lt;xsl:value-of select=&quot;'0000'&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
              &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if8&quot;>&lt;/xsl:value-of>
        &lt;/ns4:InputTime>
        &lt;ns4:MessageInputReference>
          &lt;ns4:Date>
            &lt;xsl:variable name=&quot;if9&quot;>
               &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputDate'))&quot;>
                  &lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'OutputDate')&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
				
				 &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and (not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputDate'))))&quot;>
                   &lt;xsl:value-of select=&quot;'991231'&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
              &lt;/xsl:choose>
            &lt;/xsl:variable>
            &lt;xsl:value-of select=&quot;$if9&quot;>&lt;/xsl:value-of>
          &lt;/ns4:Date>
          &lt;ns4:LTIdentifier>
            &lt;xsl:variable name=&quot;if10&quot;>
              &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                  &lt;xsl:value-of select=&quot;MXToMT:com.fiorano.funclet.MXtoMT.MX_To_MT_BICFI_LTIAddress(string($document_Input1/Envelope/ns3:AppHdr/ns3:Fr/ns3:FIId/ns3:FinInstnId/ns3:BICFI))&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
              &lt;/xsl:choose>
            &lt;/xsl:variable>
            &lt;xsl:value-of select=&quot;$if10&quot;>&lt;/xsl:value-of>
          &lt;/ns4:LTIdentifier>
          &lt;ns4:BranchCode>
            &lt;xsl:variable name=&quot;if11&quot;>
              &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                  &lt;xsl:variable name=&quot;if12&quot;>
                    &lt;xsl:choose>
                      &lt;xsl:when test=&quot;(string-length($document_Input1/Envelope/ns3:AppHdr/ns3:Fr/ns3:FIId/ns3:FinInstnId/ns3:BICFI))&amp;gt;=('11')&quot;>
                        &lt;xsl:value-of select=&quot;substring($document_Input1/Envelope/ns3:AppHdr/ns3:Fr/ns3:FIId/ns3:FinInstnId/ns3:BICFI,(string-length($document_Input1/Envelope/ns3:AppHdr/ns3:Fr/ns3:FIId/ns3:FinInstnId/ns3:BICFI))-('2'),string-length($document_Input1/Envelope/ns3:AppHdr/ns3:Fr/ns3:FIId/ns3:FinInstnId/ns3:BICFI))&quot;>&lt;/xsl:value-of>
                      &lt;/xsl:when>
                      &lt;xsl:otherwise>
                        &lt;xsl:value-of select=&quot;'XXX'&quot;>&lt;/xsl:value-of>
                      &lt;/xsl:otherwise>
                    &lt;/xsl:choose>
                  &lt;/xsl:variable>
                  &lt;xsl:value-of select=&quot;$if12&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
              &lt;/xsl:choose>
            &lt;/xsl:variable>
            &lt;xsl:value-of select=&quot;$if11&quot;>&lt;/xsl:value-of>
          &lt;/ns4:BranchCode>
          &lt;ns4:SessionNumber>
            &lt;xsl:variable name=&quot;if13&quot;>
              &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                   &lt;xsl:value-of select=&quot;substring(java:_getStringProperty($_TIF_MESSAGE_, 'SequenceNumber'),'1','4')&quot;/>
                &lt;/xsl:when>
              &lt;/xsl:choose>
            &lt;/xsl:variable>
            &lt;xsl:value-of select=&quot;$if13&quot;>&lt;/xsl:value-of>
          &lt;/ns4:SessionNumber>
          &lt;ns4:ISN>
            &lt;xsl:variable name=&quot;if14&quot;>
              &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                  &lt;xsl:value-of select=&quot;substring(java:_getStringProperty($_TIF_MESSAGE_, 'SequenceNumber'),'5','6')&quot;/>
                &lt;/xsl:when>
              &lt;/xsl:choose>
            &lt;/xsl:variable>
            &lt;xsl:value-of select=&quot;$if14&quot;>&lt;/xsl:value-of>
          &lt;/ns4:ISN>
        &lt;/ns4:MessageInputReference>
        &lt;ns4:Date>
          &lt;xsl:variable name=&quot;if15&quot;>
            &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputDate'))&quot;>
                  &lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'OutputDate')&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
				
				 &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and (not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputDate'))))&quot;>
                   &lt;xsl:value-of select=&quot;'991231'&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
              &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if15&quot;>&lt;/xsl:value-of>
        &lt;/ns4:Date>
        &lt;ns4:Time>
          &lt;xsl:variable name=&quot;if16&quot;>
              &lt;xsl:choose>
                &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputTime'))&quot;>
                  &lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'OutputTime')&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
				
				 &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode')))) and (not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'OutputTime'))))&quot;>
                   &lt;xsl:value-of select=&quot;'0000'&quot;>&lt;/xsl:value-of>
                &lt;/xsl:when>
              &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if16&quot;>&lt;/xsl:value-of>
        &lt;/ns4:Time>
        &lt;ns4:MessagePriority>
          &lt;xsl:variable name=&quot;if17&quot;>
            &lt;xsl:choose>
              &lt;xsl:when test=&quot;((java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))!=('I') or not(string-length(java:_getStringProperty($_TIF_MESSAGE_, 'ApplicationMode'))))&quot;>
                &lt;xsl:variable name=&quot;if18&quot;>
                  &lt;xsl:choose>
                    &lt;xsl:when test=&quot;($document_Input1/Envelope/ns3:AppHdr/ns3:Prty)=('HIGH')&quot;>
                      &lt;xsl:value-of select=&quot;'U'&quot;>&lt;/xsl:value-of>
                    &lt;/xsl:when>
                    &lt;xsl:otherwise>
                      &lt;xsl:value-of select=&quot;'N'&quot;>&lt;/xsl:value-of>
                    &lt;/xsl:otherwise>
                  &lt;/xsl:choose>
                &lt;/xsl:variable>
                &lt;xsl:value-of select=&quot;$if18&quot;>&lt;/xsl:value-of>
              &lt;/xsl:when>
            &lt;/xsl:choose>
          &lt;/xsl:variable>
          &lt;xsl:value-of select=&quot;$if17&quot;>&lt;/xsl:value-of>
        &lt;/ns4:MessagePriority></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0">&lt;xsl:template name=&quot;tokenizeLine&quot;>
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>
 &lt;xsl:param name=&quot;separator&quot; select=&quot;'ENDOFLINE'&quot;/>
        &lt;xsl:choose>
            &lt;xsl:when test=&quot;not(contains($text, $separator))&quot;>
                &lt;ns1:Line>
                    &lt;xsl:value-of select=&quot;normalize-space($text)&quot;/>
                &lt;/ns1:Line>
            &lt;/xsl:when>
            &lt;xsl:otherwise>
               &lt;ns1:Line>
                    &lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $separator))&quot;/>
               &lt;/ns1:Line>
                &lt;xsl:call-template name=&quot;tokenizeLine&quot;>
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $separator)&quot;/>
                &lt;/xsl:call-template>
            &lt;/xsl:otherwise>
        &lt;/xsl:choose>
&lt;/xsl:template>
&lt;xsl:param name=&quot;_TIF_MESSAGE_&quot;>&lt;/xsl:param></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block3:0,F103:0">&lt;xsl:value-of select=&quot;java:_setBooleanProperty($_TIF_MESSAGE_, 'isIncludeAdditionalDetails', '1')&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block3:0,F111:0">&lt;xsl:value-of select=&quot;MXtoMT:com.fiorano.funclet.MXtoMT.getServiceTypeIdentifier(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:PmtTpInf/ns2:SvcLvl/ns2:Cd))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block3:0,F121:0">&lt;xsl:value-of select=&quot;$document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:PmtId/ns2:UETR&quot;>&lt;/xsl:value-of>
          &lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'UETR_ID', $document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:PmtId/ns2:UETR)&quot;>&lt;/xsl:value-of>
          &lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'Truncated_Fields', '')&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,SeqA:0,F20a:0,[Choice]:0,F20:0">&lt;xsl:variable name=&quot;MT20&quot;>
&lt;xsl:value-of select=&quot;MXtoMT:com.fiorano.funclet.MXtoMT.MX_To_MT_Field20withTruncate(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:PmtId/ns2:InstrId))&quot;>&lt;/xsl:value-of>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;TruncTemp&quot;>
  &lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'Truncated_Fields')&quot;/>
&lt;/xsl:variable>

&lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'Truncated_Fields', concat($TruncTemp,'F20ENDOFFIELDTAG',substring-after($MT20,'ENDOFOUTPUT'),'ENDOFTRUNCATEDFIELD'))&quot;/></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F21a_1:0,[Choice]:0,F21:0">&lt;xsl:value-of select=&quot;$document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:PmtId/ns2:InstrId&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F32a:0,[Choice]:0,F32B:0,Amount:0">&lt;xsl:value-of select=&quot;MXtoMT:com.fiorano.funclet.MXtoMT.mx2MTCurrencyAmount(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Amt/ns2:InstdAmt))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F71a:0,[Choice]:0,F71A:0">&lt;xsl:variable name=&quot;if32&quot;>
                    &lt;xsl:choose>
                      &lt;xsl:when test=&quot;($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:ChrgBr)=('CRED')&quot;>
                        &lt;xsl:value-of select=&quot;'BEN'&quot;>&lt;/xsl:value-of>
                      &lt;/xsl:when>
                      &lt;xsl:when test=&quot;($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:ChrgBr)=('DEBT')&quot;>
                        &lt;xsl:value-of select=&quot;'OUR'&quot;>&lt;/xsl:value-of>
                      &lt;/xsl:when>
                      &lt;xsl:when test=&quot;($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:ChrgBr)=('SHAR')&quot;>
                        &lt;xsl:value-of select=&quot;'SHA'&quot;>&lt;/xsl:value-of>
                      &lt;/xsl:when>
                    &lt;/xsl:choose>
                  &lt;/xsl:variable>
                  &lt;xsl:value-of select=&quot;$if32&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F70a:0,[Choice]:0,F70:0,Narrative:0">&lt;xsl:variable name=&quot;F70&quot;>
	&lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.MX_To_MTRemittanceInformationwithTruncate(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:RmtInf),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:RltdRmtInf),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:UltmtCdtr),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:UltmtDbtr),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:Purp),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:Purp/ns3:Prtry),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:PmtId/ns3:EndToEndId),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:RmtInf/ns3:Ustrd),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:RltdRmtInf/ns3:RmtId),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:RmtInf/ns3:Strd),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtCdtr/ns3:Nm),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtCdtr/ns3:PstlAdr/ns3:Ctry),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtCdtr/ns3:PstlAdr/ns3:TwnNm),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtCdtr/ns3:Id/ns3:OrgId/ns3:Othr/ns3:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtCdtr/ns3:Id/ns3:PrvtId/ns3:Othr/ns3:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtDbtr/ns3:Nm),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtDbtr/ns3:PstlAdr/ns3:Ctry),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtDbtr/ns3:PstlAdr/ns3:TwnNm),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtDbtr/ns3:Id/ns3:OrgId/ns3:Othr/ns3:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns3:UltmtDbtr/ns3:Id/ns3:PrvtId/ns3:Othr/ns3:Id))&quot;>&lt;/xsl:value-of>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;LineSeparator&quot;>
&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>
&lt;/xsl:variable>

&lt;xsl:call-template name=&quot;tokenizeLine&quot;>
	&lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-before($F70,'ENDOFOUTPUT')&quot;/>
	&lt;xsl:with-param name=&quot;separator&quot; select=&quot;$LineSeparator&quot;/>
&lt;/xsl:call-template>
&lt;xsl:variable name=&quot;TruncTemp&quot;>
	&lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'Truncated_Fields')&quot;>&lt;/xsl:value-of>
&lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F70a:0,[Choice]:0,F70:0,Narrative:0,[ONE MANY]:0,Line:0">&lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'Truncated_Fields', concat($TruncTemp,'F70_Narative_LineENDOFFIELDTAG',substring-after($F70,'ENDOFOUTPUT'),'ENDOFTRUNCATEDFIELD'))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F59a:0,[Choice]:0,F59:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFLINE'&quot;/>
&lt;/xsl:variable>
&lt;xsl:variable name=&quot;VariableSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFVAR'&quot;/>
&lt;/xsl:variable>
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>
	&lt;xsl:for-each select=&quot;$document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Cdtr/ns2:PstlAdr/ns2:AdrLine&quot;>
		&lt;xsl:value-of select=&quot;.&quot;/>
		&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>
	&lt;/xsl:for-each>
&lt;/xsl:variable>
&lt;xsl:variable name=&quot;F59aFlag&quot;>
	&lt;xsl:choose>
		&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Cdtr/ns2:Id/ns2:OrgId/ns2:AnyBIC))))&quot;>
			&lt;xsl:value-of select=&quot;'59ABIC'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59AAccount'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Cdtr/ns2:PstlAdr/ns2:Ctry))))&quot;>
			&lt;xsl:value-of select=&quot;'59FPartyNameAndAddressLEI1'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59FAccount'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Cdtr/ns2:PstlAdr/ns2:AdrLine))))&quot;>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(('true')=(MXToMT:com.fiorano.funclet.MXtoMT.MX_To_MTAddressLineType(string($AppendedPostalAddress),string($LineSeparator))))&quot;>
					&lt;xsl:value-of select=&quot;'59FPartyNameAndAddressLEI2'&quot;/>
					&lt;xsl:choose>
						&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct))))&quot;>
							&lt;xsl:value-of select=&quot;'59FAccount'&quot;/>
						&lt;/xsl:when>
					&lt;/xsl:choose>
				&lt;/xsl:when>
				&lt;xsl:otherwise>
					&lt;xsl:value-of select=&quot;'59PartyNameAndUnstructuredAddress'&quot;/>
					&lt;xsl:choose>
						&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct))))&quot;>
							&lt;xsl:value-of select=&quot;'59Account'&quot;/>
						&lt;/xsl:when>
					&lt;/xsl:choose>
				&lt;/xsl:otherwise>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Cdtr/ns2:Nm)))&quot;>
			&lt;xsl:value-of select=&quot;'59PartyNameAndUnstructuredAddress'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59Account'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Cdtr)))&quot;>
			&lt;xsl:value-of select=&quot;'59PartyNameAndNOTPROVIDEDAddress'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59Account'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:otherwise>
			&lt;xsl:value-of select=&quot;'false'&quot;/>
		&lt;/xsl:otherwise>
	&lt;/xsl:choose>
&lt;/xsl:variable>


&lt;xsl:variable name=&quot;ResultantMTAddressTable&quot;>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;contains($F59aFlag,'59Account')&quot;>
					&lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.mx2MTAccountwithTruncate(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct/ns2:Id/ns2:IBAN),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct/ns2:Id/ns2:Othr/ns2:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct/ns2:Id/ns2:Othr/ns2:SchmeNm/ns2:Cd))&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F59a:0,[Choice]:0,F59:0,Account:0">&lt;xsl:variable name=&quot;ResultantMTAddressTable&quot;>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;$F59aFlag&quot;>
					&lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.mx2MTAccountwithTruncate(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct/ns2:Id/ns2:IBAN),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct/ns2:Id/ns2:Othr/ns2:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAcct/ns2:Id/ns2:Othr/ns2:SchmeNm/ns2:Cd))&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:variable>
		&lt;xsl:value-of select=&quot;normalize-space(substring-before($ResultantMTAddressTable,'ENDOFOUTPUT'))&quot;/>
		&lt;xsl:variable name=&quot;TruncTemp&quot;>
			&lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'Truncated_Fields')&quot;/>
		&lt;/xsl:variable>
		&lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'Truncated_Fields', concat($TruncTemp,'F59Account_ENDOFFIELDTAG',substring-after($ResultantMTAddressTable,'ENDOFOUTPUT'),'ENDOFTRUNCATEDFIELD'))&quot;/></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F59a:0,[Choice]:0,F59:0,NameAndAddress:0">&lt;xsl:variable name=&quot;ResultantMTAddressTable&quot;>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;$F59aFlag&quot;>
					&lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.MX_To_MTPartyNameAndUnstructuredAddresswithTruncate(string($AppendedPostalAddress),string($LineSeparator),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:Cdtr/ns2:Nm))&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;contains($F59aFlag,'59PartyNameAndNOTPROVIDEDAddress')&quot;>
					&lt;xsl:value-of select=&quot;'NOTPROVIDEDENDOFOUTPUT'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:variable>
		&lt;xsl:call-template name=&quot;tokenizeLine&quot;>
			&lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-before($ResultantMTAddressTable,'ENDOFOUTPUT')&quot;/>
		&lt;/xsl:call-template>
		&lt;xsl:variable name=&quot;TruncTemp&quot;>
			&lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'Truncated_Fields')&quot;/>
		&lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F59a:0,[Choice]:0,F59:0,NameAndAddress:0,[ONE MANY]:0,Line:0">&lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'Truncated_Fields', concat($TruncTemp,'F59_NameAndAddress_LineENDOFFIELDTAG',substring-after($ResultantMTAddressTable,'ENDOFOUTPUT'),'ENDOFTRUNCATEDFIELD'))&quot;/></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F50a_2:0,[Choice]:0,F50H:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFLINE'&quot;/>
&lt;/xsl:variable>
&lt;xsl:variable name=&quot;VariableSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFVAR'&quot;/>
&lt;/xsl:variable>
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>
	&lt;xsl:for-each select=&quot;$document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:Dbtr/ns2:PstlAdr/ns2:AdrLine&quot;>
		&lt;xsl:value-of select=&quot;.&quot;/>
		&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>
	&lt;/xsl:for-each>
&lt;/xsl:variable>
&lt;xsl:variable name=&quot;F59aFlag&quot;>
	&lt;xsl:choose>
		&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:Dbtr/ns2:Id/ns2:OrgId/ns2:AnyBIC))))&quot;>
			&lt;xsl:value-of select=&quot;'59ABIC'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59AAccount'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:Dbtr/ns2:PstlAdr/ns2:Ctry))))&quot;>
			&lt;xsl:value-of select=&quot;'59FPartyNameAndAddressLEI1'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59FAccount'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:Dbtr/ns2:PstlAdr/ns2:AdrLine))))&quot;>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(('true')=(MXToMT:com.fiorano.funclet.MXtoMT.MX_To_MTAddressLineType(string($AppendedPostalAddress),string($LineSeparator))))&quot;>
					&lt;xsl:value-of select=&quot;'59FPartyNameAndAddressLEI2'&quot;/>
					&lt;xsl:choose>
						&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct))))&quot;>
							&lt;xsl:value-of select=&quot;'59FAccount'&quot;/>
						&lt;/xsl:when>
					&lt;/xsl:choose>
				&lt;/xsl:when>
				&lt;xsl:otherwise>
					&lt;xsl:value-of select=&quot;'59PartyNameAndUnstructuredAddress'&quot;/>
					&lt;xsl:choose>
						&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct))))&quot;>
							&lt;xsl:value-of select=&quot;'59Account'&quot;/>
						&lt;/xsl:when>
					&lt;/xsl:choose>
				&lt;/xsl:otherwise>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:Dbtr/ns2:Nm)))&quot;>
			&lt;xsl:value-of select=&quot;'59PartyNameAndUnstructuredAddress'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59Account'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:when test=&quot;not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:Dbtr)))&quot;>
			&lt;xsl:value-of select=&quot;'59PartyNameAndNOTPROVIDEDAddress'&quot;/>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;(not(MX2MT:com.fiorano.funclet.MXtoMT.isInputNullorBlank(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct))))&quot;>
					&lt;xsl:value-of select=&quot;'59Account'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:when>
		&lt;xsl:otherwise>
			&lt;xsl:value-of select=&quot;'false'&quot;/>
		&lt;/xsl:otherwise>
	&lt;/xsl:choose>
&lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F50a_2:0,[Choice]:0,F50H:0,Account:0">&lt;xsl:variable name=&quot;ResultantMTAddressTable&quot;>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;$F59aFlag&quot;>
					&lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.mx2MTAccountwithTruncate(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct/ns2:Id/ns2:IBAN),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct/ns2:Id/ns2:Othr/ns2:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:DbtrAcct/ns2:Id/ns2:Othr/ns2:SchmeNm/ns2:Cd))&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:variable>
		&lt;xsl:value-of select=&quot;normalize-space(substring-before($ResultantMTAddressTable,'ENDOFOUTPUT'))&quot;/>
		&lt;xsl:variable name=&quot;TruncTemp&quot;>
			&lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'Truncated_Fields')&quot;/>
		&lt;/xsl:variable>
		&lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'Truncated_Fields', concat($TruncTemp,'F59Account_ENDOFFIELDTAG',substring-after($ResultantMTAddressTable,'ENDOFOUTPUT'),'ENDOFTRUNCATEDFIELD'))&quot;/></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F50a_2:0,[Choice]:0,F50H:0,NameAndAddress:0">&lt;xsl:variable name=&quot;ResultantMTAddressTable&quot;>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;$F59aFlag&quot;>
					&lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.MX_To_MTPartyNameAndUnstructuredAddresswithTruncate(string($AppendedPostalAddress),string($LineSeparator),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:Dbtr/ns2:Nm))&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
			&lt;xsl:choose>
				&lt;xsl:when test=&quot;contains($F59aFlag,'59PartyNameAndNOTPROVIDEDAddress')&quot;>
					&lt;xsl:value-of select=&quot;'NOTPROVIDEDENDOFOUTPUT'&quot;/>
				&lt;/xsl:when>
			&lt;/xsl:choose>
		&lt;/xsl:variable>
		&lt;xsl:call-template name=&quot;tokenizeLine&quot;>
			&lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-before($ResultantMTAddressTable,'ENDOFOUTPUT')&quot;/>
		&lt;/xsl:call-template>
		&lt;xsl:variable name=&quot;TruncTemp&quot;>
			&lt;xsl:value-of select=&quot;java:_getStringProperty($_TIF_MESSAGE_, 'Truncated_Fields')&quot;/>
		&lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F50a_2:0,[Choice]:0,F50H:0,NameAndAddress:0,[ONE MANY]:0,Line:0">&lt;xsl:value-of select=&quot;java:_setStringProperty($_TIF_MESSAGE_, 'Truncated_Fields', concat($TruncTemp,'F59_NameAndAddress_LineENDOFFIELDTAG',substring-after($ResultantMTAddressTable,'ENDOFOUTPUT'),'ENDOFTRUNCATEDFIELD'))&quot;/></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F57a:0,[Choice]:0,F57A:0">&lt;xsl:variable name=&quot;if27&quot;>
                  &lt;xsl:choose>
                    &lt;xsl:when test=&quot;boolean($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct)&quot;>
                      &lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.mx2MTAccountWithPrefix(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct/ns2:Id/ns2:IBAN),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct/ns2:Id/ns2:Othr/ns2:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct/ns2:Id/ns2:Othr/ns2:SchmeNm/ns2:Cd))&quot;>&lt;/xsl:value-of>
                    &lt;/xsl:when>
                    &lt;xsl:otherwise>
                      &lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.mx2MTClearingIdentifierChoice(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:PmtTpInf/ns2:ClrChanl),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgt/ns2:FinInstnId/ns2:ClrSysMmbId/ns2:ClrSysId/ns2:Cd),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgt/ns2:FinInstnId/ns2:ClrSysMmbId/ns2:MmbId),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgt/ns2:FinInstnId/ns2:BICFI))&quot;>&lt;/xsl:value-of>
                    &lt;/xsl:otherwise>
                  &lt;/xsl:choose>
                &lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F57a:0,[Choice]:0,F57A:0">&lt;xsl:if test=&quot;string-length($if27)&quot;></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F57a:0,[Choice]:0,F57A:0,PartyIdentifier:0">&lt;xsl:variable name=&quot;if28&quot;>
                      &lt;xsl:choose>
                        &lt;xsl:when test=&quot;boolean($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct)&quot;>
                          &lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.mx2MTAccountWithPrefix(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct/ns2:Id/ns2:IBAN),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct/ns2:Id/ns2:Othr/ns2:Id),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgtAcct/ns2:Id/ns2:Othr/ns2:SchmeNm/ns2:Cd))&quot;>&lt;/xsl:value-of>
                        &lt;/xsl:when>
                        &lt;xsl:otherwise>
                          &lt;xsl:value-of select=&quot;MX2MT:com.fiorano.funclet.MXtoMT.mx2MTClearingIdentifierChoice(string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:PmtTpInf/ns2:ClrChanl),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgt/ns2:FinInstnId/ns2:ClrSysMmbId/ns2:ClrSysId/ns2:Cd),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgt/ns2:FinInstnId/ns2:ClrSysMmbId/ns2:MmbId),string($document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgt/ns2:FinInstnId/ns2:BICFI))&quot;>&lt;/xsl:value-of>
                        &lt;/xsl:otherwise>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select=&quot;$if28&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="3" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F57a:0,[Choice]:0,F57A:0,PartyIdentifier:0">&lt;/xsl:if></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="OUT_PORT:0,FinMessage:0,Block4:0,Document:0,MT101:0,[ONE MANY]:0,SeqB:0,F57a:0,[Choice]:0,F57A:0,IdentifierCode:0">&lt;xsl:value-of select=&quot;$document_Input1/Envelope/ns2:Document/ns2:CstmrCdtTrfInitn/ns2:PmtInf/ns2:CdtTrfTxInf/ns2:CdtrAgt/ns2:FinInstnId/ns2:BICFI&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
</mappermodel:MapperProject>