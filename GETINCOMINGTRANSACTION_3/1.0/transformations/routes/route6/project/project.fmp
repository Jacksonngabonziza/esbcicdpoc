<?xml version="1.0" encoding="UTF-8"?>
<mappermodel:MapperProject xmlns:mappermodel="http://www.fiorano.com/tools/mapper/mappermodel" convertor="nameIndexed" suppressEmptyItems="false" suppressPattern="" version="3.0.2">
  <mappermodel:XSLTVersion>1.0</mappermodel:XSLTVersion>
  <mappermodel:XSLTEngine>org.apache.xalan.processor.TransformerFactoryImpl</mappermodel:XSLTEngine>
  <mappermodel:XSLTEncoding>UTF-8</mappermodel:XSLTEncoding>
  <mappermodel:OutputMethod>text</mappermodel:OutputMethod>
  <mappermodel:OutputEncoding>UTF-8</mappermodel:OutputEncoding>
  <mappermodel:indent>true</mappermodel:indent>
  <mappermodel:setDTD>false</mappermodel:setDTD>
  <mappermodel:omit-xml-declaration>false</mappermodel:omit-xml-declaration>
  <mappermodel:createEmptyOutputTags>false</mappermodel:createEmptyOutputTags>
  <mappermodel:copyUnmappedFromInput enabled="false"/>
  <mappermodel:disableOutputEscapingForANY>false</mappermodel:disableOutputEscapingForANY>
  <mappermodel:Comments>Key in relevant comments</mappermodel:Comments>
  <mappermodel:excludeResultPrefixes></mappermodel:excludeResultPrefixes>
  <mappermodel:addDefaultXSTypeAttributes>false</mappermodel:addDefaultXSTypeAttributes>
  <mappermodel:InputStructure>
    <mappermodel:Structure duplicates="" filePath="applicationContextSchema.xsd" mime="DTD" name="Application-Context" rootName="Context"/>
  </mappermodel:InputStructure>
  <mappermodel:OutputStructure>
    <mappermodel:Structure duplicates="" filePath="Output1.DTD" mime="DTD" name="Output1" rootName="d"/>
  </mappermodel:OutputStructure>
  <mappermodel:Namespaces/>
  <mappermodel:Mappings>
    <mappermodel:GraphModel inputPins="1,2,3" outputNode="Output1:0,d:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="Length" type="21" x="143" y="102">
        <mappermodel:InputPins>str</mappermodel:InputPins>
        <mappermodel:OutputPins>num</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="Text-Content" type="131" x="146" y="206">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="deimaltoHex:decimalToHex(d, padding)" type="69" x="359" y="114">
        <mappermodel:InputPins>d,padding</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="4" type="22" x="149" y="163">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="1" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="1" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="1" outputID="2" outputIndex="0"/>
    </mappermodel:GraphModel>
  </mappermodel:Mappings>
  <mappermodel:Extensions>
    <mappermodel:Extension language="javascript" name="deimaltoHex">
      <mappermodel:Script>function decimalToHex(d, padding) {
    var hex = Number(d).toString(16);
    padding = typeof (padding) === &quot;undefined&quot; || padding === null ? padding = 2 : padding;

    while (hex.length &lt; padding) {
        hex = &quot;0&quot; + hex;
    }

    return hex;
}</mappermodel:Script>
      <mappermodel:Function name="decimalToHex" return="String">
        <mappermodel:Argument datatype="String" name="d"/>
        <mappermodel:Argument datatype="String" name="padding"/>
      </mappermodel:Function>
    </mappermodel:Extension>
  </mappermodel:Extensions>
</mappermodel:MapperProject>