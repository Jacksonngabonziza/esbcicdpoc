<?xml version="1.0" encoding="UTF-8"?>
<mappermodel:MapperProject xmlns:mappermodel="http://www.fiorano.com/tools/mapper/mappermodel" convertor="nameIndexed" version="3.0.2">
  <mappermodel:Comments>Key in relevant comments</mappermodel:Comments>
  <mappermodel:InputStructure>
    <mappermodel:Structure duplicates="" filePath="Application-Context.DTD" mime="DTD" name="Application-Context" rootName="Context"/>
    <mappermodel:Structure duplicates="" filePath="IN_PORT.XSD" mime="XSD" name="IN_PORT" rootName="{urn:swift:xsd:mtmsg.2020}FinMessage">
      <mappermodel:ExternalStructure filePath="IN_PORT_ext.XSD" mime="XSD" name="urn:swift:xsd:fin.202.2020"/>
    </mappermodel:Structure>
  </mappermodel:InputStructure>
  <mappermodel:OutputStructure>
    <mappermodel:Structure duplicates="" filePath="Output1.XSD" mime="XSD" name="Output1" rootName="{urn:swift:xsd:envelope}Envelope">
      <mappermodel:ExternalStructure filePath="AppHdr.xsd" name="urn:iso:std:iso:20022:tech:xsd:head.001.001.01"/>
      <mappermodel:ExternalStructure filePath="RTGSFinancialInstitutionCreditTransfer_pacs.009.001.08.xsd" name="urn:iso:std:iso:20022:tech:xsd:pacs.009.001.08"/>
    </mappermodel:Structure>
  </mappermodel:OutputStructure>
  <mappermodel:Namespaces>
    <mappermodel:namespace prefix="ns1" uri="urn:swift:xsd:mtmsg.2020"/>
    <mappermodel:namespace prefix="ns2" uri="http://www.w3.org/2001/XMLSchema"/>
    <mappermodel:namespace prefix="ns3" uri="urn:swift:xsd:fin.202.2020"/>
    <mappermodel:namespace prefix="ns4" uri="urn:swift:xsd:envelope"/>
    <mappermodel:namespace prefix="ns5" uri="urn:iso:std:iso:20022:tech:xsd:pacs.009.001.08"/>
    <mappermodel:namespace prefix="ns6" uri="urn:iso:std:iso:20022:tech:xsd:head.001.001.01"/>
  </mappermodel:Namespaces>
  <mappermodel:Mappings>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,GrpHdr:0,MsgId:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F20a:0,[Choice]:0,F20:0" x="-1" y="-1">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,GrpHdr:0,CreDtTm:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="9999-12-31T00:00:00+00:00" type="22" x="87" y="51">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,GrpHdr:0,NbOfTxs:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="1" type="22" x="48" y="71">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PmtId:0,InstrId:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F20a:0,[Choice]:0,F20:0" x="197" y="74">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PmtId:0,EndToEndId:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F21a:0,[Choice]:0,F21:0" x="163" y="63">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2,3" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PmtId:0,UETR:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block3:0,F121:0" x="124" y="53">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrBkSttlmDt:0" x="893" y="94">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F32a:0,[Choice]:0,F32A:0,Date:0" x="117" y="90">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MXDate(java.lang.String arg1)" type="69" x="363" y="130">
        <mappermodel:InputPins>arg1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="2" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrBkSttlmAmt:0" x="628" y="125">
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXAmount(java.lang.String arg1)" type="69" x="174" y="160">
        <mappermodel:InputPins>arg1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F32a:0,[Choice]:0,F32A:0,Amount:0" x="24" y="70">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="1" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrBkSttlmAmt:0,Ccy:0" x="536" y="94">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F32a:0,[Choice]:0,F32A:0,Currency:0" x="102" y="65">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,AppHdr:0,Fr:0,[Choice]:0,FIId:0,FinInstnId:0,BICFI:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="Variable:TSender" type="160" x="67" y="77">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,AppHdr:0,To:0,[Choice]:0,FIId:0,FinInstnId:0,BICFI:0" x="687" y="106">
      <mappermodel:FunctionGraphNode label="Variable:TReceiver" type="160" x="174" y="173">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,GrpHdr:0,SttlmInf:0,SttlmMtd:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="CLRG" type="22" x="142" y="93">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,InstgAgt:0,FinInstnId:0,BICFI:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="Variable:TSender" type="160" x="83" y="105">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,InstdAgt:0,FinInstnId:0,BICFI:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="Variable:TReceiver" type="160" x="138" y="117">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt1:0,FinInstnId:0,Nm:0" x="544" y="81">
      <mappermodel:FunctionGraphNode label="SubString-Before" type="23" x="269" y="129">
        <mappermodel:InputPins>str,before</mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="Variable:F56D_NameAndAddress" type="160" x="60" y="82">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="\n" type="22" x="97" y="173">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="1" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="1" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Dbtr:0,FinInstnId:0,Nm:0" x="619" y="94">
      <mappermodel:FunctionGraphNode label="SubString-Before" type="23" x="299" y="114">
        <mappermodel:InputPins>str,before</mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="\n" type="22" x="54" y="162">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="Variable:F52D_NameAndAddress" type="160" x="20" y="88">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="1" inputIndex="1" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="1" inputIndex="0" outputID="3" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,CdtrAgt:0,FinInstnId:0,Nm:0" x="670" y="134">
      <mappermodel:FunctionGraphNode label="Variable:F57D_NameAndAddress" type="160" x="149" y="102">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="\n" type="22" x="99" y="198">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="SubString-Before" type="23" x="328" y="148">
        <mappermodel:InputPins>str,before</mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="3" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="1" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="3" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Dbtr:0,FinInstnId:0,BICFI:0" x="934" y="58">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F52a:0,[Choice]:0,F52A:0,IdentifierCode:0" x="138" y="197">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="677" y="74">
        <mappermodel:InputPins>bool,then,bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="Variable:TSender" type="160" x="335" y="62">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="Length" type="21" x="334" y="22">
        <mappermodel:InputPins>str</mappermodel:InputPins>
        <mappermodel:OutputPins>num</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="539" y="25">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F52a:0" x="100" y="23">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="Length" type="21" x="272" y="104">
        <mappermodel:InputPins>str</mappermodel:InputPins>
        <mappermodel:OutputPins>num</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F52a:0,[Choice]:0,F52A:0" x="44" y="104">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.generateBIC11(java.lang.String BIC)" type="69" x="260" y="256">
        <mappermodel:InputPins>BIC</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="5" inputIndex="0" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="0" outputID="6" outputIndex="0"/>
      <mappermodel:Link inputID="7" inputIndex="0" outputID="8" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="2" outputID="7" outputIndex="0"/>
      <mappermodel:Link inputID="9" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="3" outputID="9" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PmtTpInf:0,[ZERO MANY]:0,SvcLvl:0,[Choice]:0,Cd:0" x="865" y="124">
      <mappermodel:FunctionGraphNode label="00" type="22" x="100" y="32">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="G" type="22" x="127" y="123">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="Concat" type="20" x="400" y="116">
        <mappermodel:InputPins>1,2,3</mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block3:0,F111:0" x="135" y="183">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="376" y="31">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="643" y="164">
        <mappermodel:InputPins>bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="5" inputIndex="0" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="5" inputIndex="1" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="0" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="1" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="3" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="6" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Dbtr:0,FinInstnId:0,ClrSysMmbId:0,MmbId:0" x="972" y="104">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F52a:0,[Choice]:0,F52A:0,PartyIdentifier:0" x="-40" y="50">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="733" y="41">
        <mappermodel:InputPins>bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(java.lang.String arg1)" type="69" x="644" y="214">
        <mappermodel:InputPins>arg1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="284" y="46">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//" type="22" x="16" y="108">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="160" y="155">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//CH" type="22" x="7" y="169">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="373" y="160">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="AND" type="38" x="547" y="117">
        <mappermodel:InputPins>1,2,3,4</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="237" y="218">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//FW" type="22" x="39" y="217">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="478" y="210">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="4" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="1" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="1" outputID="7" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="8" inputIndex="0" outputID="6" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="1" outputID="11" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="12" inputIndex="0" outputID="10" outputIndex="0"/>
      <mappermodel:Link inputID="9" inputIndex="0" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="9" inputIndex="1" outputID="8" outputIndex="0"/>
      <mappermodel:Link inputID="9" inputIndex="2" outputID="12" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="9" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="2" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,DbtrAcct:0,Id:0,[Choice]:0,Othr:0,Id:0" x="906" y="122">
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(java.lang.String arg1)" type="69" x="285" y="227">
        <mappermodel:InputPins>arg1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F52a:0,[Choice]:0,F52A:0,PartyIdentifier:0" x="-169" y="31">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="//" type="22" x="-86" y="86">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="78" y="44">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="274" y="95">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="543" y="145">
        <mappermodel:InputPins>bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="57" y="124">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//CH" type="22" x="-109" y="167">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="OR" type="37" x="338" y="173">
        <mappermodel:InputPins>1,2,3</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="4" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="5" inputIndex="0" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="7" inputIndex="1" outputID="8" outputIndex="0"/>
      <mappermodel:Link inputID="7" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="9" inputIndex="0" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="9" inputIndex="1" outputID="7" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="0" outputID="9" outputIndex="0"/>
      <mappermodel:Link inputID="1" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="1" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="6" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt1:0,FinInstnId:0,ClrSysMmbId:0,MmbId:0" x="964" y="121">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F56a:0,[Choice]:0,F56A:0,PartyIdentifier:0" x="-54" y="33">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="AND" type="38" x="532" y="53">
        <mappermodel:InputPins>1,2,3,4,5</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="375" y="165">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(java.lang.String arg1)" type="69" x="563" y="211">
        <mappermodel:InputPins>arg1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//" type="22" x="9" y="156">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="135" y="94">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="179" y="156">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//CH" type="22" x="7" y="196">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//FW" type="22" x="-15" y="241">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="172" y="207">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="200" y="241">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="386" y="206">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="423" y="243">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//RT" type="22" x="56" y="287">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="708" y="91">
        <mappermodel:InputPins>bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="6" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="1" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="7" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="7" inputIndex="1" outputID="8" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="11" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="11" inputIndex="1" outputID="14" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="1" outputID="9" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="0" outputID="7" outputIndex="0"/>
      <mappermodel:Link inputID="12" inputIndex="0" outputID="10" outputIndex="0"/>
      <mappermodel:Link inputID="13" inputIndex="0" outputID="11" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="6" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="1" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="2" outputID="12" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="3" outputID="13" outputIndex="0"/>
      <mappermodel:Link inputID="15" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="15" inputIndex="1" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="15" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt1:0,FinInstnId:0,BICFI:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F56a:0,[Choice]:0,F56A:0,IdentifierCode:0" x="108" y="107">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.generateBIC11(java.lang.String BIC)" type="69" x="218" y="177">
        <mappermodel:InputPins>BIC</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="2" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,CdtrAgt:0,FinInstnId:0,ClrSysMmbId:0,MmbId:0" x="852" y="57">
      <mappermodel:FunctionGraphNode label="//" type="22" x="52" y="67">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="305" y="35">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F57a:0,[Choice]:0,F57A:0,PartyIdentifier:0" x="11" y="15">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="294" y="71">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="291" y="116">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="StartsWith" type="49" x="291" y="159">
        <mappermodel:InputPins>str,start</mappermodel:InputPins>
        <mappermodel:OutputPins>bool</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//CH" type="22" x="57" y="121">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//FW" type="22" x="49" y="163">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="//RT" type="22" x="33" y="227">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="AND" type="38" x="541" y="87">
        <mappermodel:InputPins>1,2,3,4,5,6</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NOT" type="39" x="563" y="31">
        <mappermodel:InputPins>1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="743" y="111">
        <mappermodel:InputPins>bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(java.lang.String arg1)" type="69" x="517" y="232">
        <mappermodel:InputPins>arg1</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="2" inputIndex="1" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="0" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="5" inputIndex="0" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="0" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="1" outputID="7" outputIndex="0"/>
      <mappermodel:Link inputID="5" inputIndex="1" outputID="8" outputIndex="0"/>
      <mappermodel:Link inputID="6" inputIndex="1" outputID="9" outputIndex="0"/>
      <mappermodel:Link inputID="11" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="0" outputID="11" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="1" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="2" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="10" inputIndex="3" outputID="6" outputIndex="0"/>
      <mappermodel:Link inputID="12" inputIndex="0" outputID="10" outputIndex="0"/>
      <mappermodel:Link inputID="13" inputIndex="0" outputID="3" outputIndex="0"/>
      <mappermodel:Link inputID="12" inputIndex="1" outputID="13" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="12" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,CdtrAgt:0,FinInstnId:0,BICFI:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F57a:0,[Choice]:0,F57A:0,IdentifierCode:0" x="116" y="82">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.generateBIC11(java.lang.String BIC)" type="69" x="259" y="152">
        <mappermodel:InputPins>BIC</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="2" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Cdtr:0,FinInstnId:0,BICFI:0" x="582" y="103">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F58a:0,[Choice]:0,F58A:0,IdentifierCode:0" x="199" y="80">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="MT2MX:com.fiorano.funclet.MTtoMX.generateBIC11(java.lang.String BIC)" type="69" x="328" y="178">
        <mappermodel:InputPins>BIC</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="2" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,AppHdr:0,BizMsgIdr:0" x="480" y="80">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F20a:0,[Choice]:0,F20:0" x="179" y="71">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,AppHdr:0,MsgDefIdr:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="pacs.009.001.08" type="22" x="118" y="114">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,AppHdr:0,CreDt:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="9999-12-31T00:00:00Z" type="22" x="91" y="74">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,AppHdr:0,Prty:0" x="927" y="52">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block2:0,[Choice]:0,MessagePriority:1" x="12" y="12">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:FunctionGraphNode label="UpperCase" type="30" x="268" y="13">
        <mappermodel:InputPins>str</mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="If-Then-Else" type="41" x="630" y="56">
        <mappermodel:InputPins>bool,then,bool,else</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="=" type="31" x="563" y="7">
        <mappermodel:InputPins>1,2</mappermodel:InputPins>
        <mappermodel:OutputPins>R</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="U" type="22" x="245" y="81">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="NORM" type="22" x="251" y="162">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:FunctionGraphNode label="HIGH" type="22" x="230" y="111">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="2" inputIndex="0" outputID="1" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="0" outputID="2" outputIndex="0"/>
      <mappermodel:Link inputID="4" inputIndex="1" outputID="5" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="0" outputID="4" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="3" outputID="6" outputIndex="0"/>
      <mappermodel:Link inputID="3" inputIndex="1" outputID="7" outputIndex="0"/>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="3" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Cdtr:0,FinInstnId:0,Nm:0" x="-1" y="-1">
      <mappermodel:TreeGraphNode inputNode="IN_PORT:0,FinMessage:0,Block4:0,Document:0,MT202:0,F58a:0,[Choice]:0,F58D:0,NameAndAddress:0,[ONE MANY]:0,Line:0" x="-1" y="-1">
        <mappermodel:InputPins>1st</mappermodel:InputPins>
        <mappermodel:OutputPins>1st</mappermodel:OutputPins>
      </mappermodel:TreeGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
    <mappermodel:GraphModel inputPins="1,2" outputNode="Output1:0,Envelope:0,Document:0,FICdtTrf:0,GrpHdr:0,SttlmInf:0,ClrSys:0,[Choice]:0,Cd:0" x="-1" y="-1">
      <mappermodel:FunctionGraphNode label="TGT" type="22" x="246" y="112">
        <mappermodel:InputPins></mappermodel:InputPins>
        <mappermodel:OutputPins>str</mappermodel:OutputPins>
        <mappermodel:Properties/>
      </mappermodel:FunctionGraphNode>
      <mappermodel:Link inputID="0" inputIndex="0" outputID="1" outputIndex="0"/>
    </mappermodel:GraphModel>
  </mappermodel:Mappings>
  <mappermodel:Extensions>
    <mappermodel:Extension language="java" name="MT2MX">
      <mappermodel:Script>com.fiorano.funclet.MTtoMX</mappermodel:Script>
      <mappermodel:Function name="public static java.lang.String com.fiorano.funclet.MTtoMX.MT_To_MXDate(java.lang.String)">
        <mappermodel:Argument datatype="java.lang.String" name="arg1"/>
      </mappermodel:Function>
      <mappermodel:Function name="public static java.lang.String com.fiorano.funclet.MTtoMX.generateBIC11(java.lang.String)">
        <mappermodel:Argument datatype="java.lang.String" name="BIC"/>
      </mappermodel:Function>
      <mappermodel:Function name="public static java.lang.String com.fiorano.funclet.MTtoMX.mt2MXAmount(java.lang.String)">
        <mappermodel:Argument datatype="java.lang.String" name="arg1"/>
      </mappermodel:Function>
      <mappermodel:Function name="public static java.lang.String com.fiorano.funclet.MTtoMX.mt2MXClearingIdentifier(java.lang.String)">
        <mappermodel:Argument datatype="java.lang.String" name="arg1"/>
      </mappermodel:Function>
      <mappermodel:Function name="public static java.lang.String com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(java.lang.String)">
        <mappermodel:Argument datatype="java.lang.String" name="arg1"/>
      </mappermodel:Function>
    </mappermodel:Extension>
  </mappermodel:Extensions>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,SttlmTmIndctn:0,CdtDtTm:0">&lt;xsl:for-each select = &quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F13a/ns3:F13C&quot;> &#xD;
              &lt;xsl:choose>&#xD;
               &lt;xsl:when test=&quot;(ns3:Code)=('RNCTIME')&quot;>&#xD;
                &lt;xsl:value-of select=&quot;concat('0001-01-01T',substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))&quot;>&lt;/xsl:value-of>&#xD;
               &lt;/xsl:when>&#xD;
              &lt;/xsl:choose>&#xD;
			 &lt;/xsl:for-each></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,SttlmTmReq:0,TillTm:0">&lt;xsl:for-each select = &quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F13a/ns3:F13C&quot;> &#xD;
              &lt;xsl:choose>&#xD;
               &lt;xsl:when test=&quot;(ns3:Code)=('TILTIME')&quot;>&#xD;
                &lt;xsl:value-of select=&quot;concat(substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))&quot;>&lt;/xsl:value-of>&#xD;
               &lt;/xsl:when>&#xD;
              &lt;/xsl:choose>&#xD;
			 &lt;/xsl:for-each></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,SttlmTmReq:0,FrTm:0">&lt;xsl:for-each select = &quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F13a/ns3:F13C&quot;> &#xD;
              &lt;xsl:choose>&#xD;
               &lt;xsl:when test=&quot;(ns3:Code)=('FROTIME')&quot;>&#xD;
                &lt;xsl:value-of select=&quot;concat(substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))&quot;>&lt;/xsl:value-of>&#xD;
               &lt;/xsl:when>&#xD;
              &lt;/xsl:choose>&#xD;
			 &lt;/xsl:for-each></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,SttlmTmReq:0,RjctTm:0">&lt;xsl:for-each select = &quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F13a/ns3:F13C&quot;> &#xD;
              &lt;xsl:choose>&#xD;
               &lt;xsl:when test=&quot;(ns3:Code)=('REJTIME')&quot;>&#xD;
                &lt;xsl:value-of select=&quot;concat(substring(ns3:TimeIndication,1,2),':',substring(ns3:TimeIndication,3),':00',ns3:Sign,substring(ns3:TimeOffset,1,2),':',substring(ns3:TimeOffset,3))&quot;>&lt;/xsl:value-of>&#xD;
               &lt;/xsl:when>&#xD;
              &lt;/xsl:choose>&#xD;
			 &lt;/xsl:for-each></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,GrpHdr:0,SttlmInf:0">&lt;xsl:variable name=&quot;METAFCT002&quot;>&#xD;
 &lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.METAFCT002(&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F54a),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53B),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53B/ns3:PartyIdentifier),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53B/ns3:Location),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53A),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53A/ns3:PartyIdentifier),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53A/ns3:IdentifierCode),&#xD;
 string($TSender),&#xD;
 string($TReceiver),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53D),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F54a/ns3:F54A),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F54a/ns3:F54A/ns3:IdentifierCode),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F54a/ns3:F54A/ns3:PartyIdentifier),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F54a/ns3:F54B),&#xD;
 string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F54a/ns3:F54D),&#xD;
 string(null))&quot;>&lt;/xsl:value-of> &#xD;
 &#xD;
 &lt;/xsl:variable>&#xD;
 &lt;xsl:variable name=&quot;SettlementMethod&quot;>&#xD;
 &lt;xsl:value-of select=&quot;substring-before($METAFCT002, ':::')&quot;/>&#xD;
 &lt;/xsl:variable>&#xD;
&lt;xsl:variable name=&quot;settlemtAccount&quot;>&#xD;
 &lt;xsl:value-of select=&quot;substring-before(substring-after($METAFCT002, ':::'),':::') &quot;/>&#xD;
 &lt;/xsl:variable>&#xD;
&lt;xsl:variable name=&quot;InstructionForNextAgent53&quot;>&#xD;
 &lt;xsl:value-of select=&quot;substring-before(substring-after(substring-after($METAFCT002, ':::'), ':::'),':::') &quot;/>&#xD;
 &lt;/xsl:variable>&#xD;
&lt;xsl:variable name=&quot;InstructionForNextAgent54&quot;>&#xD;
 &lt;xsl:value-of select=&quot;substring-after(substring-after(substring-after($METAFCT002, ':::'), ':::'),':::') &quot;/>&#xD;
 &lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt1:0">&lt;xsl:variable name=&quot;F56D_NameAndAddress&quot;> &#xD;
 &lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56D/ns3:NameAndAddress/ns3:Line&quot;> &#xD;
 &lt;xsl:value-of select=&quot;concat(text(),'\n')&quot;>&lt;/xsl:value-of>&#xD;
	&lt;/xsl:for-each>&#xD;
	 &lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt1:0,FinInstnId:0,PstlAdr:0">&lt;xsl:call-template name=&quot;Address_Template&quot;>
								&lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($F56D_NameAndAddress, '\n')&quot;/>
&lt;/xsl:call-template>
                  &lt;ns5:AdrLine>
                    &lt;xsl:variable name=&quot;if4&quot;>
                      &lt;xsl:choose>
                        &lt;xsl:when test=&quot;(not(string-length(substring-after($F56D_NameAndAddress,'\n'))) and string-length(substring-before($F56D_NameAndAddress,'\n')))&quot;>
                          &lt;xsl:value-of select=&quot;'NOTPROVIDED'&quot;>&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select=&quot;$if4&quot;>&lt;/xsl:value-of>
                  &lt;/ns5:AdrLine></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Dbtr:0">&lt;xsl:variable name=&quot;F52D_NameAndAddress&quot;> &#xD;
 &lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F52a/ns3:F52D/ns3:NameAndAddress/ns3:Line&quot;> &#xD;
 &lt;xsl:value-of select=&quot;concat(text(),'\n')&quot;>&lt;/xsl:value-of>&#xD;
	&lt;/xsl:for-each>&#xD;
	 &lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Dbtr:0,FinInstnId:0,PstlAdr:0">&lt;xsl:call-template name=&quot;Address_Template&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($F52D_NameAndAddress, '\n')&quot;/>&#xD;
                &lt;/xsl:call-template></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,CdtrAgt:0">&lt;xsl:variable name=&quot;F57D_NameAndAddress&quot;> &#xD;
 &lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57D/ns3:NameAndAddress/ns3:Line&quot;> &#xD;
 &lt;xsl:value-of select=&quot;concat(text(),'\n')&quot;>&lt;/xsl:value-of>&#xD;
	&lt;/xsl:for-each>&#xD;
	 &lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,CdtrAgt:0,FinInstnId:0,PstlAdr:0">&lt;xsl:call-template name=&quot;Address_Template&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($F57D_NameAndAddress, '\n')&quot;/>&#xD;
                &lt;/xsl:call-template></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt1:0,FinInstnId:0,Nm:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent1_Name(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt1:0,FinInstnId:0,PstlAdr:0,[ZERO MANY]:0,AdrLine:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;ResultantPostalAddress&quot;>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent1_Address(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of>&#xD;
&#xD;
 &lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:call-template name=&quot;tokenize&quot;>&#xD;
&lt;xsl:with-param name=&quot;text&quot; select=&quot;$ResultantPostalAddress&quot;/>&#xD;
&lt;xsl:with-param name=&quot;separator&quot; select=&quot;$LineSeparator&quot;/>&#xD;
&lt;/xsl:call-template></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt1:0,FinInstnId:0,BICFI:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent1_BICFI(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt1Acct:0,Id:0,[Choice]:0,Othr:0,Id:0">&lt;xsl:variable name=&quot;if18&quot;>&#xD;
                      &lt;xsl:choose>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56A/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:variable name=&quot;if19&quot;>&#xD;
                            &lt;xsl:choose>&#xD;
                              &lt;xsl:when test=&quot;(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//CH')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56A/ns3:PartyIdentifier,'//'))&quot;>&#xD;
                                &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56A/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
                            &lt;/xsl:choose>&#xD;
                          &lt;/xsl:variable>&#xD;
                          &lt;xsl:value-of select=&quot;$if19&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56C/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:variable name=&quot;if20&quot;>&#xD;
                            &lt;xsl:choose>&#xD;
                              &lt;xsl:when test=&quot;(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//CH')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56C/ns3:PartyIdentifier,'//'))&quot;>&#xD;
							   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56C/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
                            &lt;/xsl:choose>&#xD;
                          &lt;/xsl:variable>&#xD;
                          &lt;xsl:value-of select=&quot;$if20&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56D/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:variable name=&quot;if21&quot;>&#xD;
                            &lt;xsl:choose>&#xD;
                              &lt;xsl:when test=&quot;(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56D/ns3:PartyIdentifier,'//CH')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56D/ns3:PartyIdentifier,'//'))&quot;>&#xD;
							   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F56a/ns3:F56D/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
                            &lt;/xsl:choose>&#xD;
                          &lt;/xsl:variable>&#xD;
                          &lt;xsl:value-of select=&quot;$if21&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                      &lt;/xsl:choose>&#xD;
                    &lt;/xsl:variable>&#xD;
                    &lt;xsl:value-of select=&quot;$if18&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,CdtrAgtAcct:0,Id:0,[Choice]:0,Othr:0,Id:0">&lt;xsl:variable name=&quot;if27&quot;>&#xD;
                      &lt;xsl:choose>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57A/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:variable name=&quot;if28&quot;>&#xD;
                            &lt;xsl:choose>&#xD;
                              &lt;xsl:when test=&quot;(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//CH')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57A/ns3:PartyIdentifier,'//'))&quot;>&#xD;
                                &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57A/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
                            &lt;/xsl:choose>&#xD;
                          &lt;/xsl:variable>&#xD;
                          &lt;xsl:value-of select=&quot;$if28&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57B/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:variable name=&quot;if29&quot;>&#xD;
                            &lt;xsl:choose>&#xD;
                              &lt;xsl:when test=&quot;(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//CH')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57B/ns3:PartyIdentifier,'//'))&quot;>&#xD;
                                &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57B/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
                            &lt;/xsl:choose>&#xD;
                          &lt;/xsl:variable>&#xD;
                          &lt;xsl:value-of select=&quot;$if29&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57D/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:variable name=&quot;if30&quot;>&#xD;
                            &lt;xsl:choose>&#xD;
                              &lt;xsl:when test=&quot;(not(starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57D/ns3:PartyIdentifier,'//CH')) or starts-with($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57D/ns3:PartyIdentifier,'//'))&quot;>&#xD;
                                &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F57a/ns3:F57D/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
                            &lt;/xsl:choose>&#xD;
                          &lt;/xsl:variable>&#xD;
                          &lt;xsl:value-of select=&quot;$if30&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                      &lt;/xsl:choose>&#xD;
                    &lt;/xsl:variable>&#xD;
                    &lt;xsl:value-of select=&quot;$if27&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,CdtrAcct:0,Id:0,[Choice]:0,Othr:0,Id:0">&lt;xsl:variable name=&quot;if34&quot;>&#xD;
                      &lt;xsl:choose>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58A/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58A/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58D/ns3:PartyIdentifier)&quot;>&#xD;
                          &lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.mt2MXFinancialInstitutionAccount(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58D/ns3:PartyIdentifier))&quot;>&lt;/xsl:value-of>&#xD;
                        &lt;/xsl:when>&#xD;
                      &lt;/xsl:choose>&#xD;
                    &lt;/xsl:variable>&#xD;
                    &lt;xsl:value-of select=&quot;$if34&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt1:0,FinInstnId:0,PstlAdr:0,[ZERO MANY]:0,AdrLine:0">&lt;!-- User code starts here --></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,[ZERO MANY]:0,InstrForCdtrAgt:0">&lt;!-- User code starts here --></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Cdtr:0,FinInstnId:0,PstlAdr:0,[ZERO MANY]:0,AdrLine:0">&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58D/ns3:NameAndAddress/ns3:Line&quot;>&#xD;
	&lt;xsl:if test=&quot;position()&amp;gt;('1')&quot;></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Cdtr:0,FinInstnId:0,PstlAdr:0,[ZERO MANY]:0,AdrLine:0">&lt;xsl:value-of select=&quot;.&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="3" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Cdtr:0,FinInstnId:0,PstlAdr:0,[ZERO MANY]:0,AdrLine:0">&lt;/xsl:if>&#xD;
&lt;/xsl:for-each>&#xD;
&lt;ns2:AdrLine>&#xD;
                  &lt;xsl:variable name=&quot;if3&quot;>&#xD;
                    &lt;xsl:choose>&#xD;
                      &lt;xsl:when test=&quot;MT2MX:com.fiorano.funclet.MTtoMX.isInputNullorBlank(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58D/ns3:NameAndAddress/ns3:Line[2]))  and (not(string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58A/ns3:IdentifierCode))) and (string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F58a/ns3:F58D/ns3:NameAndAddress/ns3:Line[1]))&quot;>&#xD;
                        &lt;xsl:value-of select=&quot;'NOTPROVIDED'&quot;>&lt;/xsl:value-of>&#xD;
                      &lt;/xsl:when>&#xD;
                    &lt;/xsl:choose>&#xD;
                  &lt;/xsl:variable>&#xD;
                  &lt;xsl:value-of select=&quot;$if3&quot;>&lt;/xsl:value-of>&#xD;
                &lt;/ns2:AdrLine></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="Output1:0,Envelope:0">&lt;xsl:variable name=&quot;Identifier&quot;>&#xD;
 &lt;xsl:choose>&#xD;
                        &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:InputIdentifier)&quot;>&#xD;
                            &lt;xsl:value-of select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:InputIdentifier&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
							  &lt;xsl:when test=&quot;string-length($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier)&quot;>&#xD;
                            &lt;xsl:value-of select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:OutputIdentifier&quot;>&lt;/xsl:value-of>&#xD;
                              &lt;/xsl:when>&#xD;
                            &lt;/xsl:choose>&#xD;
                   &#xD;
 &lt;/xsl:variable>&#xD;
&lt;xsl:variable name=&quot;TSender&quot;>&#xD;
&#xD;
 &lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.generateTSenderTarget(string($Identifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:LTIdentifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:MessageInputReference/ns1:BranchCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress))&quot;>&lt;/xsl:value-of>&#xD;
 &#xD;
 &lt;/xsl:variable>&#xD;
&lt;xsl:variable name=&quot;TReceiver&quot;>&#xD;
 &lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.generateTReceiverTarget(string($Identifier),string($document_IN_PORT/ns1:FinMessage/ns1:Block1/ns1:LogicalTerminalAddress),string($document_IN_PORT/ns1:FinMessage/ns1:Block2/ns1:DestinationAddress))&quot;>&lt;/xsl:value-of>&#xD;
 &#xD;
 &lt;/xsl:variable></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0">&lt;xsl:template name=&quot;Address_Template&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;separator&quot; select=&quot;'\n'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
            &lt;xsl:when test=&quot;not(contains($text, $separator))&quot;>&#xD;
                  &lt;ns5:AdrLine>&#xD;
                    &lt;xsl:value-of select=&quot;normalize-space($text)&quot;/>&#xD;
                &lt;/ns5:AdrLine>&#xD;
            &lt;/xsl:when>&#xD;
            &lt;xsl:otherwise>&#xD;
               &lt;ns5:AdrLine>&#xD;
                    &lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $separator))&quot;/>&#xD;
               &lt;/ns5:AdrLine>&#xD;
                &lt;xsl:call-template name=&quot;Address_Template&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $separator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:otherwise>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&lt;xsl:template name=&quot;tokenize&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;separator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;(not(contains($text, $separator))) &quot;>&#xD;
                &lt;ns5:AdrLine>&#xD;
                    &lt;xsl:value-of select=&quot;normalize-space($text)&quot;/>&#xD;
                &lt;/ns5:AdrLine>&#xD;
				&#xD;
            &lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;((contains($text, $separator))) &quot;>&#xD;
               &lt;ns5:AdrLine>&#xD;
                    &lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $separator))&quot;/>&#xD;
               &lt;/ns5:AdrLine>&#xD;
                &lt;xsl:call-template name=&quot;tokenize&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $separator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&#xD;
&lt;xsl:template name=&quot;tokenize2&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;separator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;(not(contains($text, $separator))) &quot;>&#xD;
			&lt;ns5:InstrForNxtAgt>&#xD;
                &lt;ns5:InstrInf>&#xD;
                    &lt;xsl:value-of select=&quot;normalize-space($text)&quot;/>&#xD;
                &lt;/ns5:InstrInf>&#xD;
				&lt;/ns5:InstrForNxtAgt>&#xD;
				&#xD;
            &lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;((contains($text, $separator))) &quot;>&#xD;
			&lt;ns5:InstrForNxtAgt>&#xD;
               &lt;ns5:InstrInf>&#xD;
                    &lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $separator))&quot;/>&#xD;
               &lt;/ns5:InstrInf>&#xD;
			   &lt;/ns5:InstrForNxtAgt>&#xD;
                &lt;xsl:call-template name=&quot;tokenize2&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $separator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&#xD;
 &lt;xsl:template name=&quot;tokenize3&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;LineSeparator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
 &lt;xsl:param name=&quot;VarSeparator&quot; select=&quot;'ENDOFFVAR'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;not(contains($text, $LineSeparator))&quot;>&#xD;
			&lt;ns5:Othr>&#xD;
				&lt;ns5:Id>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Id>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:SchmeNm>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&lt;/ns5:SchmeNm>&#xD;
&#xD;
				&lt;xsl:variable name=&quot;Issurval&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($Cdval, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Issr>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Issurval, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Issr>&#xD;
                &lt;/ns5:Othr>&#xD;
            &lt;/xsl:when>&#xD;
           &lt;xsl:when test=&quot;((contains($text, $LineSeparator))) &quot;>&#xD;
              &#xD;
			  &lt;ns5:Othr>&#xD;
				&lt;ns5:Id>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Id>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval1&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:SchmeNm>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval1, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&lt;/ns5:SchmeNm>&#xD;
&#xD;
				&lt;xsl:variable name=&quot;Issurval1&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($Cdval1, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Issr>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Issurval1, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Issr>&#xD;
				&lt;/ns5:Othr>&#xD;
                &lt;xsl:call-template name=&quot;tokenize3&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $LineSeparator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&#xD;
&#xD;
 &lt;xsl:template name=&quot;tokenize4&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;LineSeparator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
 &lt;xsl:param name=&quot;VarSeparator&quot; select=&quot;'ENDOFFVAR'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;not(contains($text, $LineSeparator))&quot;>&#xD;
			&lt;ns5:InstrForCdtrAgt>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:InstrInf>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:InstrInf>&#xD;
&#xD;
                &lt;/ns5:InstrForCdtrAgt>&#xD;
            &lt;/xsl:when>&#xD;
           &lt;xsl:when test=&quot;((contains($text, $LineSeparator))) &quot;>&#xD;
              &#xD;
			  &lt;ns5:InstrForCdtrAgt>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval1&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:InstrInf>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval1, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:InstrInf>&#xD;
&#xD;
				&lt;/ns5:InstrForCdtrAgt>&#xD;
                &lt;xsl:call-template name=&quot;tokenize4&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $LineSeparator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&#xD;
&#xD;
 &lt;xsl:template name=&quot;tokenize5&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;LineSeparator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
 &lt;xsl:param name=&quot;VarSeparator&quot; select=&quot;'ENDOFFVAR'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;not(contains($text, $LineSeparator))&quot;>&#xD;
			&lt;ns5:SvcLvl>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
                &lt;/ns5:SvcLvl>&#xD;
            &lt;/xsl:when>&#xD;
           &lt;xsl:when test=&quot;((contains($text, $LineSeparator))) &quot;>&#xD;
              &#xD;
			  &lt;ns5:SvcLvl>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval1&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval1, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
				&lt;/ns5:SvcLvl>&#xD;
                &lt;xsl:call-template name=&quot;tokenize5&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $LineSeparator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&#xD;
 &lt;xsl:template name=&quot;tokenize6&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;LineSeparator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
 &lt;xsl:param name=&quot;VarSeparator&quot; select=&quot;'ENDOFFVAR'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;not(contains($text, $LineSeparator))&quot;>&#xD;
			&lt;ns5:LclInstrm>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
                &lt;/ns5:LclInstrm>&#xD;
            &lt;/xsl:when>&#xD;
           &lt;xsl:when test=&quot;((contains($text, $LineSeparator))) &quot;>&#xD;
              &#xD;
			  &lt;ns5:LclInstrm>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval1&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval1, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
				&lt;/ns5:LclInstrm>&#xD;
                &lt;xsl:call-template name=&quot;tokenize6&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $LineSeparator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&#xD;
 &lt;xsl:template name=&quot;tokenize7&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;LineSeparator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
 &lt;xsl:param name=&quot;VarSeparator&quot; select=&quot;'ENDOFFVAR'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;not(contains($text, $LineSeparator))&quot;>&#xD;
			&lt;ns5:CtgyPurp>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
                &lt;/ns5:CtgyPurp>&#xD;
            &lt;/xsl:when>&#xD;
           &lt;xsl:when test=&quot;((contains($text, $LineSeparator))) &quot;>&#xD;
              &#xD;
			  &lt;ns5:CtgyPurp>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval1&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval1, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
				&lt;/ns5:CtgyPurp>&#xD;
                &lt;xsl:call-template name=&quot;tokenize7&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $LineSeparator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template>&#xD;
&#xD;
&#xD;
&#xD;
 &lt;xsl:template name=&quot;tokenize8&quot;>&#xD;
 &lt;xsl:param name=&quot;text&quot; select=&quot;.&quot;/>&#xD;
 &lt;xsl:param name=&quot;LineSeparator&quot; select=&quot;'ENDOFFLINE'&quot;/>&#xD;
 &lt;xsl:param name=&quot;VarSeparator&quot; select=&quot;'ENDOFFVAR'&quot;/>&#xD;
        &lt;xsl:choose>&#xD;
		&lt;xsl:when test=&quot;not(string-length($text))&quot;>&#xD;
		&lt;/xsl:when>&#xD;
            &lt;xsl:when test=&quot;not(contains($text, $LineSeparator))&quot;>&#xD;
			&lt;ns5:Purp>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
                &lt;/ns5:Purp>&#xD;
            &lt;/xsl:when>&#xD;
           &lt;xsl:when test=&quot;((contains($text, $LineSeparator))) &quot;>&#xD;
              &#xD;
			  &lt;ns5:Purp>&#xD;
				&lt;ns5:Cd>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($text, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Cd>&#xD;
				&#xD;
				&lt;xsl:variable name=&quot;Cdval1&quot;>&#xD;
				&lt;xsl:value-of select=&quot;substring-after($text, $VarSeparator)&quot;/>&#xD;
				&lt;/xsl:variable>&#xD;
				&#xD;
				&lt;ns5:Prtry>&#xD;
				&lt;xsl:value-of select=&quot;normalize-space(substring-before($Cdval1, $VarSeparator))&quot;/>&#xD;
				&lt;/ns5:Prtry>&#xD;
&#xD;
				&lt;/ns5:Purp>&#xD;
                &lt;xsl:call-template name=&quot;tokenize8&quot;>&#xD;
                    &lt;xsl:with-param name=&quot;text&quot; select=&quot;substring-after($text, $LineSeparator)&quot;/>&#xD;
                &lt;/xsl:call-template>&#xD;
            &lt;/xsl:when>&#xD;
        &lt;/xsl:choose>&#xD;
&lt;/xsl:template></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,[ZERO MANY]:1,InstrForNxtAgt:0">&lt;!-- User code starts here --></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt2:0,FinInstnId:0,BICFI:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent2_BICFI(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt2:0,FinInstnId:0,Nm:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent2_Name(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt3:0,FinInstnId:0,BICFI:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent3_BICFI(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt3:0,FinInstnId:0,Nm:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent3_Name(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt2:0,FinInstnId:0,BICFI:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent2BICFI(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt2:0,FinInstnId:0,Nm:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent2Name(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt2:0,FinInstnId:0,PstlAdr:0,TwnNm:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent2TownName(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt2:0,FinInstnId:0,PstlAdr:0,Ctry:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent2CountryCode(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt3:0,FinInstnId:0,PstlAdr:0,Ctry:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent3CountryCode(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt3:0,FinInstnId:0,PstlAdr:0,TwnNm:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent3TownName(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt3:0,FinInstnId:0,Nm:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent3Name(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt3:0,FinInstnId:0,BICFI:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent3BICFI(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt2:0,FinInstnId:0,ClrSysMmbId:0,MmbId:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent2ClearSysId(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt2:0,FinInstnId:0,ClrSysMmbId:0,ClrSysId:0,[Choice]:0,Cd:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent2ClearSysCode(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt3:0,FinInstnId:0,ClrSysMmbId:0,MmbId:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent3ClearSysId(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,IntrmyAgt3:0,FinInstnId:0,ClrSysMmbId:0,ClrSysId:0,[Choice]:0,Cd:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;VarSeparator&quot;>&#xD;
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>&#xD;
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>&#xD;
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>&#xD;
		&lt;/xsl:for-each>&#xD;
&lt;/xsl:variable>&#xD;
&#xD;
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MXField72NewCodeWords_InterAgent3ClearSysCode(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,[ZERO MANY]:0,InstrForCdtrAgt:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;VarSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>
		&lt;/xsl:for-each>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;ResultantAddress&quot;>
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MX_InstructionForCreditorAgent2_202COV(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of>
   
 &lt;/xsl:variable>
 
 &lt;xsl:call-template name=&quot;tokenize4&quot;>
&lt;xsl:with-param name=&quot;text&quot; select=&quot;$ResultantAddress&quot;/>
&lt;/xsl:call-template></mappermodel:UserXSL>
  <mappermodel:UserXSL index="0" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,[ZERO MANY]:1,InstrForNxtAgt:0">&lt;xsl:variable name=&quot;VarSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>
		&lt;/xsl:for-each>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;ResultantAddress&quot;>
   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT_To_MX_InstructionForNextAgent2_202CORE(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F53a/ns3:F53A/ns3:IdentifierCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F54a/ns3:F54A/ns3:IdentifierCode),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of>
   
 &lt;/xsl:variable>
 
 &lt;xsl:call-template name=&quot;tokenize2&quot;>
&lt;xsl:with-param name=&quot;text&quot; select=&quot;$ResultantAddress&quot;/>
&lt;xsl:with-param name=&quot;separator&quot; select=&quot;$LineSeparator&quot;/>
&lt;/xsl:call-template></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,RmtInf:0,Ustrd:0">&lt;xsl:variable name=&quot;Limiter&quot;>
&lt;xsl:value-of select=&quot;'ENDOFOUTPUT'&quot;>&lt;/xsl:value-of>
&lt;/xsl:variable>
&lt;xsl:variable name=&quot;Line1Code&quot;>
&lt;xsl:value-of select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code&quot;>&lt;/xsl:value-of>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;MT72&quot;>
 

&lt;xsl:choose>
&lt;xsl:when test=&quot;(string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6/ns3:Narrative1) and (not(string-length($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6/ns3:Narrative2))))&quot;>
&lt;xsl:value-of select=&quot;concat('/',$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code,'/',$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative, 'ENDOFLINE')&quot;>&lt;/xsl:value-of>
&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;> 
 &lt;xsl:value-of select=&quot;concat('//',./ns3:Narrative1,'ENDOFLINE')&quot;>&lt;/xsl:value-of>
 	&lt;/xsl:for-each>
				

&lt;/xsl:when>
&lt;xsl:otherwise>

&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>

&lt;xsl:choose>
&lt;xsl:when test=&quot;((./ns3:Code)=($Line1Code))&quot;>
&lt;xsl:value-of select=&quot;concat('ENDOFOUTPUT','/',./ns3:Code,'/')&quot;>&lt;/xsl:value-of>
&lt;xsl:choose>
&lt;xsl:when test=&quot;(string-length(./ns3:Narrative2))&quot;>
&lt;xsl:value-of select=&quot;concat(./ns3:Narrative2,'ENDOFLINE')&quot;>&lt;/xsl:value-of>

&lt;/xsl:when>
&lt;/xsl:choose>
&lt;/xsl:when>
&lt;/xsl:choose>

&lt;/xsl:for-each>


&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>
&lt;xsl:choose>
&lt;xsl:when test=&quot;(string-length(./ns3:Narrative1))&quot;>
 &lt;xsl:value-of select=&quot;concat('//',./ns3:Narrative1,'ENDOFLINE')&quot;>&lt;/xsl:value-of>
&lt;/xsl:when>
&lt;/xsl:choose>
&lt;/xsl:for-each>


&lt;/xsl:otherwise>
&lt;/xsl:choose>
  &lt;/xsl:variable>


&lt;xsl:choose>
&lt;xsl:when test=&quot;contains($MT72,$Limiter)&quot;>
&lt;xsl:variable name=&quot;Resultant&quot;>
&lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.LastIndexSubstring(string($MT72),string($Limiter))&quot;>&lt;/xsl:value-of>
&lt;/xsl:variable>
&lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MXBNF_TSU_RI(string($Resultant))&quot;>&lt;/xsl:value-of>

&lt;/xsl:when>
&lt;xsl:otherwise>
&lt;xsl:value-of select=&quot;MT2MX:com.fiorano.funclet.MTtoMX.MT_To_MXBNF_TSU_RI(string($MT72))&quot;>&lt;/xsl:value-of>

&lt;/xsl:otherwise>

&lt;/xsl:choose></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,Dbtr:0,FinInstnId:0,PstlAdr:0,[ZERO MANY]:0,AdrLine:0">&lt;xsl:variable name=&quot;addr&quot;>
                      &lt;xsl:choose>
                        &lt;xsl:when test=&quot;(not(string-length(substring-after($F52D_NameAndAddress,'\n'))) and string-length(substring-before($F52D_NameAndAddress,'\n')))&quot;>
                          &lt;xsl:value-of select=&quot;'NOTPROVIDED'&quot;>&lt;/xsl:value-of>
                        &lt;/xsl:when>
                      &lt;/xsl:choose>
                    &lt;/xsl:variable>
                    &lt;xsl:value-of select=&quot;$addr&quot;>&lt;/xsl:value-of></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt2:0,FinInstnId:0,PstlAdr:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;VarSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>
		&lt;/xsl:for-each>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;ResultantPostalAddress&quot;>

   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent2_Address(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of>

 &lt;/xsl:variable>

&lt;xsl:call-template name=&quot;tokenize&quot;>
&lt;xsl:with-param name=&quot;text&quot; select=&quot;$ResultantPostalAddress&quot;/>
&lt;xsl:with-param name=&quot;separator&quot; select=&quot;$LineSeparator&quot;/>
&lt;/xsl:call-template></mappermodel:UserXSL>
  <mappermodel:UserXSL index="1" node="Output1:0,Envelope:0,Document:0,FICdtTrf:0,CdtTrfTxInf:0,PrvsInstgAgt3:0,FinInstnId:0,PstlAdr:0">&lt;xsl:variable name=&quot;LineSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFFLINE'&quot;/>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;VarSeparator&quot;>
	&lt;xsl:value-of select=&quot;'ENDOFFVAR'&quot;/>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;AppendedPostalAddress&quot;>
		&lt;xsl:for-each select=&quot;$document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Lines2to6&quot;>
			&lt;xsl:value-of select=&quot;./ns3:Narrative1&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Code&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;./ns3:Narrative2&quot;/>
			&lt;xsl:value-of select=&quot;$VarSeparator&quot;/>
			&lt;xsl:value-of select=&quot;$LineSeparator&quot;/>
		&lt;/xsl:for-each>
&lt;/xsl:variable>

&lt;xsl:variable name=&quot;ResultantPostalAddress&quot;>

   &lt;xsl:value-of select=&quot;MTtoMX:com.fiorano.funclet.MTtoMX.MT72INS_To_MXAgent_Agent3_Address(string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Code),string($document_IN_PORT/ns1:FinMessage/ns1:Block4/ns3:Document/ns3:MT202/ns3:F72a/ns3:F72/ns3:NarrativeStructuredFormat/ns3:Line1/ns3:Narrative),string($AppendedPostalAddress), string($LineSeparator), string($VarSeparator))&quot;>&lt;/xsl:value-of>

 &lt;/xsl:variable>

&lt;xsl:call-template name=&quot;tokenize&quot;>
&lt;xsl:with-param name=&quot;text&quot; select=&quot;$ResultantPostalAddress&quot;/>
&lt;xsl:with-param name=&quot;separator&quot; select=&quot;$LineSeparator&quot;/>
&lt;/xsl:call-template></mappermodel:UserXSL>
</mappermodel:MapperProject>